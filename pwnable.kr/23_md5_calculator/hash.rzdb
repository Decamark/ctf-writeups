/
type=rizin rz-db project
version=1

/core
blocksize=0x800
offset=0x8048fcb

/core/analysis

/core/analysis/blocks
0x80487e0={"size":26,"jump":134514687,"fail":134514682,"traced":true,"ninstr":8,"op_pos":[1,4,9,10,16,22,24],"stackptr":8,"parent_stackptr":0}
0x80487fa={"size":5,"jump":134514687,"ninstr":1,"stackptr":-8,"parent_stackptr":8}
0x80487ff={"size":15,"traced":true,"ninstr":5,"op_pos":[5,10,13,14],"stackptr":-8,"parent_stackptr":8}
0x8048820={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048830={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048840={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048850={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048860={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048870={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048880={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048890={"size":6,"ninstr":1,"parent_stackptr":0}
0x80488a0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80488b0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80488c0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80488d0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80488e0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80488f0={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048900={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048910={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048920={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048930={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048940={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048950={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048960={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048970={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048980={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048990={"size":6,"ninstr":1,"parent_stackptr":0}
0x80489a0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80489b0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80489c0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80489d0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80489e0={"size":6,"ninstr":1,"parent_stackptr":0}
0x80489f0={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048a00={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048a10={"size":6,"ninstr":1,"parent_stackptr":0}
0x8048a20={"size":33,"traced":true,"ninstr":13,"op_pos":[2,3,5,8,9,10,11,16,21,22,23,28],"stackptr":28,"parent_stackptr":0}
0x8048a50={"size":16,"jump":134515359,"fail":134515296,"traced":true,"ninstr":6,"op_pos":[1,3,4,7,14],"stackptr":12,"parent_stackptr":0}
0x8048a60={"size":26,"jump":134515352,"fail":134515322,"traced":true,"ninstr":7,"op_pos":[5,10,16,19,22,24],"stackptr":12,"parent_stackptr":12}
0x8048a7a={"size":6,"jump":134515328,"traced":true,"ninstr":1,"stackptr":12,"parent_stackptr":12}
0x8048a80={"size":24,"jump":134515328,"fail":134515352,"traced":true,"ninstr":6,"op_pos":[3,8,15,20,22],"parent_stackptr":12}
0x8048a98={"size":7,"jump":134515359,"traced":true,"ninstr":1,"stackptr":-4,"parent_stackptr":12}
0x8048a9f={"size":6,"traced":true,"ninstr":4,"op_pos":[3,4,5],"stackptr":-4,"parent_stackptr":12}
0x8048ab0={"size":15,"jump":134515409,"fail":134515391,"traced":true,"ninstr":6,"op_pos":[1,3,6,11,13],"stackptr":28,"parent_stackptr":0}
0x8048abf={"size":9,"jump":134515409,"fail":134515400,"traced":true,"ninstr":3,"op_pos":[5,7],"stackptr":28,"parent_stackptr":28}
0x8048ac8={"size":9,"jump":134515409,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":20,"parent_stackptr":28}
0x8048ad1={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":20,"parent_stackptr":28}
0x8048ad4={"size":354,"traced":true,"ninstr":100,"op_pos":[1,3,4,7,10,17,19,24,27,29,31,33,35,38,43,46,49,52,58,60,63,68,74,76,79,83,85,89,92,95,98,101,104,107,112,114,117,119,122,125,127,130,132,140,144,147,152,155,160,163,168,171,179,182,185,190,193,196,200,203,206,211,214,222,225,228,233,236,243,245,250,253,255,257,259,261,264,268,271,275,278,281,286,294,302,310,313,316,321,324,327,332,335,338,343,348,351,352,353],"stackptr":-4,"parent_stackptr":0}
0x8048c36={"size":64,"jump":134515855,"fail":134515830,"traced":true,"ninstr":22,"op_pos":[1,3,4,7,10,17,19,24,27,29,31,33,35,38,41,48,51,54,57,60,62],"stackptr":44,"parent_stackptr":0,"cmpval":61}
0x8048c76={"size":16,"jump":134515855,"fail":134515846,"traced":true,"ninstr":6,"op_pos":[3,6,9,12,14],"stackptr":44,"parent_stackptr":44,"cmpval":61}
0x8048c86={"size":9,"jump":134515878,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":44,"parent_stackptr":44}
0x8048c8f={"size":16,"jump":134515878,"fail":134515871,"traced":true,"ninstr":6,"op_pos":[3,6,9,12,14],"stackptr":44,"parent_stackptr":44,"cmpval":61}
0x8048c9f={"size":7,"jump":134515878,"traced":true,"ninstr":1,"stackptr":-4,"parent_stackptr":44}
0x8048ca6={"size":47,"traced":true,"ninstr":17,"op_pos":[3,9,11,14,16,19,23,25,29,32,35,38,41,44,45,46],"stackptr":-4,"parent_stackptr":44}
0x8048cd5={"size":259,"traced":true,"ninstr":75,"op_pos":[1,3,4,7,10,13,18,21,28,31,38,40,45,48,50,52,54,56,59,67,71,74,77,82,85,90,93,98,101,109,112,115,120,123,126,130,133,136,141,144,152,155,158,163,166,173,175,180,183,185,187,189,191,194,198,201,205,208,211,216,219,222,225,228,231,234,239,242,245,250,253,256,257,258],"stackptr":-4,"parent_stackptr":0}
0x8048dd8={"size":57,"jump":134516326,"traced":true,"ninstr":15,"op_pos":[1,3,9,12,18,24,27,29,36,41,44,47,50,55],"stackptr":172,"parent_stackptr":0}
0x8048e11={"size":9,"jump":134516281,"fail":134516250,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":172,"parent_stackptr":172,"cmpval":512}
0x8048e1a={"size":31,"jump":134516309,"traced":true,"ninstr":7,"op_pos":[8,14,18,21,24,29],"stackptr":172,"parent_stackptr":172}
0x8048e39={"size":28,"jump":134516309,"traced":true,"ninstr":7,"op_pos":[3,7,13,17,20,23],"stackptr":172,"parent_stackptr":172}
0x8048e55={"size":17,"jump":134516326,"traced":true,"ninstr":2,"op_pos":[7],"parent_stackptr":172}
0x8048e66={"size":6,"jump":134516241,"fail":134516332,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":172,"parent_stackptr":172}
0x8048e6c={"size":27,"jump":134516412,"traced":true,"ninstr":7,"op_pos":[3,7,10,13,18,25],"stackptr":172,"parent_stackptr":172}
0x8048e87={"size":53,"jump":134516412,"traced":true,"ninstr":14,"op_pos":[3,6,9,12,17,20,22,25,29,33,41,44,49],"stackptr":172,"parent_stackptr":172,"cmpval":15}
0x8048ebc={"size":6,"jump":134516359,"fail":134516418,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":172,"parent_stackptr":172,"cmpval":15}
0x8048ec2={"size":15,"jump":134516438,"fail":134516433,"traced":true,"ninstr":4,"op_pos":[3,6,13],"stackptr":172,"parent_stackptr":172}
0x8048ed1={"size":5,"ninstr":1,"stackptr":172,"parent_stackptr":172}
0x8048ed6={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":164,"parent_stackptr":172}
0x8048ed8={"size":40,"jump":134516502,"traced":true,"ninstr":12,"op_pos":[1,3,4,7,13,16,18,21,24,31,38],"stackptr":60,"parent_stackptr":0}
0x8048f00={"size":22,"jump":134516502,"traced":true,"ninstr":7,"op_pos":[3,6,8,11,16,18],"stackptr":60,"parent_stackptr":60,"cmpval":7}
0x8048f16={"size":6,"jump":134516480,"fail":134516508,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":60,"parent_stackptr":60,"cmpval":7}
0x8048f1c={"size":107,"jump":134516620,"fail":134516615,"traced":true,"ninstr":40,"op_pos":[3,6,8,11,14,16,18,21,24,27,29,32,35,37,39,41,43,46,49,52,54,57,60,62,64,67,70,73,75,78,81,83,85,87,89,92,95,98,105],"stackptr":60,"parent_stackptr":60}
0x8048f87={"size":5,"ninstr":1,"stackptr":60,"parent_stackptr":60}
0x8048f8c={"size":6,"traced":true,"ninstr":4,"op_pos":[3,4,5],"stackptr":-4,"parent_stackptr":60}
0x8048f92={"size":47,"jump":134516673,"traced":true,"ninstr":16,"op_pos":[1,3,4,5,11,17,20,22,28,30,35,40,42,44,46],"stackptr":556,"parent_stackptr":0,"cmpval":10}
0x8048fc1={"size":10,"jump":134516673,"fail":134516683,"traced":true,"ninstr":3,"op_pos":[5,8],"parent_stackptr":556}
0x8048fcb={"size":181,"jump":134516869,"fail":134516864,"traced":true,"ninstr":40,"op_pos":[5,10,15,17,19,21,26,30,38,45,50,56,58,63,68,70,72,74,80,84,91,96,102,108,112,118,121,126,132,137,143,147,150,155,161,164,169,172,179],"stackptr":556,"parent_stackptr":556}
0x8049080={"size":5,"ninstr":1,"stackptr":556,"parent_stackptr":556}
0x8049085={"size":10,"traced":true,"ninstr":5,"op_pos":[6,7,8,9],"stackptr":-4,"parent_stackptr":556}
0x804908f={"size":176,"jump":134517079,"fail":134517055,"traced":true,"ninstr":37,"op_pos":[1,3,6,9,14,22,30,38,41,46,51,59,67,75,78,83,90,95,102,107,110,115,120,124,129,133,137,140,145,150,154,158,161,166,170,174],"stackptr":36,"parent_stackptr":0}
0x804913f={"size":24,"traced":true,"ninstr":4,"op_pos":[7,12,19],"stackptr":36,"parent_stackptr":36}
0x8049157={"size":60,"traced":true,"ninstr":12,"op_pos":[7,12,19,24,29,36,41,48,53,58,59],"stackptr":28,"parent_stackptr":36}
0x80491a0={"size":48,"jump":134517241,"fail":134517200,"traced":true,"ninstr":15,"op_pos":[1,2,3,4,9,15,18,22,28,33,39,41,44,46],"stackptr":44,"parent_stackptr":0}
0x80491d0={"size":8,"jump":134517208,"traced":true,"ninstr":2,"op_pos":[2],"stackptr":44,"parent_stackptr":44}
0x80491d8={"size":33,"jump":134517208,"fail":134517241,"traced":true,"ninstr":9,"op_pos":[4,7,11,15,19,26,29,31],"parent_stackptr":44}
0x80491f9={"size":8,"traced":true,"ninstr":6,"op_pos":[3,4,5,6,7],"stackptr":-4,"parent_stackptr":44}
0x8049210={"size":2,"ninstr":1,"stackptr":-4,"parent_stackptr":0}
0x8049212={"size":4,"traced":true,"ninstr":2,"op_pos":[3],"stackptr":-4,"parent_stackptr":0}
0x8049220={"size":17,"jump":134517316,"fail":134517297,"traced":true,"ninstr":7,"op_pos":[1,3,4,7,12,15],"stackptr":12,"parent_stackptr":0}
0x8049231={"size":7,"jump":134517304,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":12,"parent_stackptr":12}
0x8049238={"size":12,"jump":134517304,"fail":134517316,"traced":true,"ninstr":5,"op_pos":[3,5,7,10],"parent_stackptr":12}
0x8049244={"size":6,"traced":true,"ninstr":4,"op_pos":[3,4,5],"stackptr":-4,"parent_stackptr":12}
0x804924c={"size":26,"traced":true,"ninstr":9,"op_pos":[1,4,9,10,16,21,24,25],"stackptr":-8,"parent_stackptr":0}

/core/analysis/cc
borland=cc
cc.borland.arg0=eax
cc.borland.arg1=edx
cc.borland.arg2=ecx
cc.borland.argn=stack_rev
cc.cdecl-fastcall-ms.argn=stack
cc.cdecl-fastcall-ms.ret=eax
cc.cdecl-thiscall-ms.arg0=ecx
cc.cdecl.argn=stack
cc.cdecl.ret=eax
cc.fastcall.arg0=ecx
cc.fastcall.arg1=edx
cc.fastcall.argn=stack
cc.fastcall.ret=eax
cc.optlink.arg0=eax
cc.optlink.arg1=edx
cc.optlink.arg2=ecx
cc.optlink.argn=stack
cc.optlink.ret=eax
cc.pascal.argn=stack_rev
cc.reg.arg0=eax
cc.reg.arg1=ebx
cc.reg.arg2=ecx
cc.reg.arg3=edx
cc.reg.ret=eax
cc.stdcall.argn=stack
cc.stdcall.ret=eax
cc.watcom.arg0=eax
cc.watcom.arg1=edx
cc.watcom.arg2=ebx
cc.watcom.arg3=ecx
cc.watcom.argn=stack
cdecl=cc
cdecl-thiscall-ms=cc
default.cc=cdecl
fastcall=cc
optlink=cc
pascal=cc
reg=cc
stdcall=cc
watcom=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x80487e0={"name":"sym._init","bits":32,"type":4,"cc":"cdecl","stack":8,"maxstack":12,"ninstr":14,"bp_frame":true,"diff":{},"bbs":[134514656,134514682,134514687]}
0x8048820={"name":"sym.imp.MD5_Init","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134514720]}
0x8048830={"name":"sym.imp.srand","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514736]}
0x8048840={"name":"sym.imp.getchar","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514752]}
0x8048850={"name":"sym.imp.MD5_Update","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134514768]}
0x8048860={"name":"sym.imp.fmemopen","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514784]}
0x8048870={"name":"loc.imp.__gmon_start","bits":32,"type":1,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514800]}
0x8048880={"name":"sym.imp.system","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514816]}
0x8048890={"name":"sym.imp.BIO_set_flags","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514832]}
0x80488a0={"name":"sym.imp.fgets","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514848]}
0x80488b0={"name":"sym.imp.BIO_new_fp","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514864]}
0x80488c0={"name":"sym.imp.__libc_start_main","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514880]}
0x80488d0={"name":"sym.imp.BIO_free_all","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514896]}
0x80488e0={"name":"sym.imp.BIO_push","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514912]}
0x80488f0={"name":"sym.imp.BIO_f_base64","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514928]}
0x8048900={"name":"sym.imp.free","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514944]}
0x8048910={"name":"sym.imp.fclose","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514960]}
0x8048920={"name":"sym.imp.MD5_Final","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134514976]}
0x8048930={"name":"sym.imp.BIO_write","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134514992]}
0x8048940={"name":"sym.imp.printf","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515008]}
0x8048950={"name":"sym.imp.BIO_ctrl","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515024]}
0x8048960={"name":"sym.imp.time","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515040]}
0x8048970={"name":"sym.imp.setvbuf","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515056]}
0x8048980={"name":"sym.imp.malloc","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134515072]}
0x8048990={"name":"sym.imp.__stack_chk_fail","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"noreturn":true,"diff":{},"bbs":[134515088]}
0x80489a0={"name":"sym.imp.__isoc99_scanf","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515104]}
0x80489b0={"name":"sym.imp.BIO_read","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515120]}
0x80489c0={"name":"sym.imp.puts","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515136]}
0x80489d0={"name":"sym.imp.BIO_new","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515152]}
0x80489e0={"name":"sym.imp.rand","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515168]}
0x80489f0={"name":"sym.imp.snprintf","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[134515184]}
0x8048a00={"name":"sym.imp.exit","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515200]}
0x8048a10={"name":"sym.imp.ceil","bits":32,"type":4,"cc":"cdecl","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134515216]}
0x8048a20={"name":"entry0","bits":32,"type":1,"cc":"cdecl","stack":28,"maxstack":28,"ninstr":13,"diff":{},"bbs":[134515232]}
0x8048a50={"name":"sym.__do_global_dtors_aux","bits":32,"type":4,"cc":"cdecl","stack":12,"maxstack":12,"ninstr":25,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134515280,134515296,134515322,134515328,134515352,134515359]}
0x8048ab0={"name":"sym.frame_dummy","bits":32,"type":4,"cc":"cdecl","stack":28,"maxstack":28,"ninstr":13,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134515376,134515391,134515400,134515409]}
0x8048ad4={"name":"sym.Base64Encode","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":60,"ninstr":100,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134515412],"vars":[{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":7,"type":"r","sp":8,"reg":"ebp"},{"off":233,"type":"r","sp":8,"reg":"ebp"},{"off":268,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_28h","type":"int32_t","kind":"b","delta":-44,"accs":[{"off":10,"type":"w","sp":18446744073709551576,"reg":"ebp"},{"off":24,"type":"r","sp":18446744073709551576,"reg":"ebp"},{"off":236,"type":"w","sp":18446744073709551576,"reg":"ebp"},{"off":250,"type":"r","sp":18446744073709551576,"reg":"ebp"}]},{"name":"var_20h","type":"int32_t","kind":"b","delta":-36,"accs":[{"off":43,"type":"w","sp":18446744073709551584,"reg":"ebp"}]},{"name":"var_1ch","type":"int32_t","kind":"b","delta":-32,"accs":[{"off":46,"type":"w","sp":18446744073709551588,"reg":"ebp"}]},{"name":"var_22h","type":"int32_t","kind":"b","delta":-38,"accs":[{"off":79,"type":"r","sp":18446744073709551582,"reg":"ebp"}]},{"name":"var_24h","type":"int32_t","kind":"b","delta":-40,"accs":[{"off":85,"type":"w","sp":18446744073709551580,"reg":"ebp"}]},{"name":"size","type":"size_t","kind":"b","delta":-28,"accs":[{"off":98,"type":"r","sp":18446744073709551592,"reg":"ebp"},{"off":119,"type":"r","sp":18446744073709551592,"reg":"ebp"}]},{"name":"arg_ch","type":"void **","kind":"b","delta":8,"arg":true,"accs":[{"off":114,"type":"r","sp":12,"reg":"ebp"},{"off":127,"type":"r","sp":12,"reg":"ebp"}]},{"name":"var_8h","type":"int32_t","kind":"s","delta":-52,"accs":[{"off":132,"type":"w","sp":8,"reg":"esp"},{"off":264,"type":"w","sp":8,"reg":"esp"},{"off":294,"type":"w","sp":8,"reg":"esp"}]},{"name":"var_4h","type":"int32_t","kind":"s","delta":-56,"accs":[{"off":140,"type":"w","sp":4,"reg":"esp"},{"off":171,"type":"w","sp":4,"reg":"esp"},{"off":196,"type":"w","sp":4,"reg":"esp"},{"off":214,"type":"w","sp":4,"reg":"esp"},{"off":271,"type":"w","sp":4,"reg":"esp"},{"off":302,"type":"w","sp":4,"reg":"esp"}]},{"name":"stream","type":"FILE *","kind":"b","delta":-24,"accs":[{"off":152,"type":"w","sp":18446744073709551596,"reg":"ebp"},{"off":179,"type":"r","sp":18446744073709551596,"reg":"ebp"},{"off":332,"type":"r","sp":18446744073709551596,"reg":"ebp"}]},{"name":"var_10h","type":"int32_t","kind":"b","delta":-20,"accs":[{"off":168,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":200,"type":"r","sp":18446744073709551600,"reg":"ebp"}]},{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":190,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":193,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":211,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":222,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":275,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":310,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":321,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_sp_ch","type":"int32_t","kind":"s","delta":-48,"accs":[{"off":286,"type":"w","sp":12,"reg":"esp"}]}]}
0x8048c36={"name":"sym.calcDecodeLength","bits":32,"type":4,"cc":"cdecl","stack":44,"maxstack":44,"ninstr":54,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134515766,134515830,134515846,134515855,134515871,134515878],"vars":[{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":7,"type":"r","sp":8,"reg":"ebp"},{"off":54,"type":"r","sp":8,"reg":"ebp"},{"off":70,"type":"r","sp":8,"reg":"ebp"},{"off":95,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_24h","type":"int32_t","kind":"b","delta":-40,"accs":[{"off":10,"type":"w","sp":18446744073709551580,"reg":"ebp"},{"off":24,"type":"r","sp":18446744073709551580,"reg":"ebp"}]},{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":38,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":48,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":64,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":89,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_10h","type":"int32_t","kind":"b","delta":-20,"accs":[{"off":41,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":80,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":105,"type":"w","sp":18446744073709551600,"reg":"ebp"}]},{"name":"var_1ah","type":"int32_t","kind":"b","delta":-30,"accs":[{"off":131,"type":"r","sp":18446744073709551590,"reg":"ebp"}]},{"name":"var_1ch","type":"int32_t","kind":"b","delta":-32,"accs":[{"off":137,"type":"w","sp":18446744073709551588,"reg":"ebp"}]},{"name":"var_20h","type":"int32_t","kind":"b","delta":-36,"accs":[{"off":150,"type":"r","sp":18446744073709551584,"reg":"ebp"}]}]}
0x8048cd5={"name":"sym.Base64Decode","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":76,"ninstr":75,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134515925],"vars":[{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":7,"type":"r","sp":8,"reg":"ebp"},{"off":28,"type":"r","sp":8,"reg":"ebp"},{"off":71,"type":"r","sp":8,"reg":"ebp"},{"off":163,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_1ch","type":"int32_t","kind":"b","delta":-32,"accs":[{"off":18,"type":"w","sp":18446744073709551588,"reg":"ebp"},{"off":250,"type":"r","sp":18446744073709551588,"reg":"ebp"}]},{"name":"var_18h","type":"int32_t","kind":"b","delta":-28,"accs":[{"off":21,"type":"w","sp":18446744073709551592,"reg":"ebp"},{"off":216,"type":"w","sp":18446744073709551592,"reg":"ebp"},{"off":219,"type":"r","sp":18446744073709551592,"reg":"ebp"}]},{"name":"var_2ch","type":"int32_t","kind":"b","delta":-48,"accs":[{"off":31,"type":"w","sp":18446744073709551572,"reg":"ebp"},{"off":45,"type":"r","sp":18446744073709551572,"reg":"ebp"},{"off":166,"type":"w","sp":18446744073709551572,"reg":"ebp"},{"off":180,"type":"r","sp":18446744073709551572,"reg":"ebp"}]},{"name":"var_8h","type":"int32_t","kind":"s","delta":-68,"accs":[{"off":59,"type":"w","sp":8,"reg":"esp"},{"off":194,"type":"w","sp":8,"reg":"esp"}]},{"name":"var_4h","type":"int32_t","kind":"s","delta":-72,"accs":[{"off":67,"type":"w","sp":4,"reg":"esp"},{"off":101,"type":"w","sp":4,"reg":"esp"},{"off":126,"type":"w","sp":4,"reg":"esp"},{"off":144,"type":"w","sp":4,"reg":"esp"},{"off":201,"type":"w","sp":4,"reg":"esp"}]},{"name":"stream","type":"FILE *","kind":"b","delta":-24,"accs":[{"off":82,"type":"w","sp":18446744073709551596,"reg":"ebp"},{"off":109,"type":"r","sp":18446744073709551596,"reg":"ebp"},{"off":239,"type":"r","sp":18446744073709551596,"reg":"ebp"}]},{"name":"var_10h","type":"int32_t","kind":"b","delta":-20,"accs":[{"off":98,"type":"w","sp":18446744073709551600,"reg":"ebp"},{"off":130,"type":"r","sp":18446744073709551600,"reg":"ebp"}]},{"name":"var_ch","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":120,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":123,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":141,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":152,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":205,"type":"r","sp":18446744073709551604,"reg":"ebp"},{"off":228,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"arg_ch","type":"int32_t","kind":"b","delta":8,"arg":true,"accs":[{"off":198,"type":"r","sp":12,"reg":"ebp"},{"off":222,"type":"r","sp":12,"reg":"ebp"}]}]}
0x8048dd8={"name":"sym.calc_md5","bits":32,"type":4,"cc":"cdecl","stack":172,"maxstack":172,"ninstr":65,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134516184,134516241,134516250,134516281,134516309,134516326,134516332,134516359,134516412,134516418,134516433,134516438],"vars":[{"name":"arg_8h","type":"int32_t","kind":"b","delta":4,"arg":true,"accs":[{"off":9,"type":"r","sp":8,"reg":"ebp"}]},{"name":"var_8ch","type":"int32_t","kind":"b","delta":-144,"accs":[{"off":12,"type":"w","sp":18446744073709551476,"reg":"ebp"},{"off":74,"type":"r","sp":18446744073709551476,"reg":"ebp"},{"off":104,"type":"r","sp":18446744073709551476,"reg":"ebp"},{"off":132,"type":"r","sp":18446744073709551476,"reg":"ebp"}]},{"name":"canary","type":"char *","kind":"b","delta":-16,"accs":[{"off":24,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":237,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"s","type":"char *","kind":"b","delta":-36,"accs":[{"off":41,"type":"w","sp":18446744073709551584,"reg":"ebp"},{"off":197,"type":"r","sp":18446744073709551584,"reg":"ebp"},{"off":234,"type":"r","sp":18446744073709551584,"reg":"ebp"}]},{"name":"var_80h","type":"int32_t","kind":"b","delta":-132,"accs":[{"off":44,"type":"r","sp":18446744073709551488,"reg":"ebp"},{"off":84,"type":"r","sp":18446744073709551488,"reg":"ebp"},{"off":114,"type":"r","sp":18446744073709551488,"reg":"ebp"},{"off":148,"type":"r","sp":18446744073709551488,"reg":"ebp"}]},{"name":"arg_ch","type":"signed int","kind":"b","delta":8,"arg":true,"accs":[{"off":57,"type":"r","sp":12,"reg":"ebp"},{"off":97,"type":"r","sp":12,"reg":"ebp"},{"off":125,"type":"r","sp":12,"reg":"ebp"},{"off":142,"type":"r","sp":12,"reg":"ebp"}]},{"name":"format","type":"char *","kind":"s","delta":-164,"accs":[{"off":66,"type":"w","sp":8,"reg":"esp"},{"off":100,"type":"w","sp":8,"reg":"esp"},{"off":204,"type":"w","sp":8,"reg":"esp"}]},{"name":"size","type":"size_t","kind":"s","delta":-168,"accs":[{"off":80,"type":"w","sp":4,"reg":"esp"},{"off":110,"type":"w","sp":4,"reg":"esp"},{"off":151,"type":"w","sp":4,"reg":"esp"},{"off":208,"type":"w","sp":4,"reg":"esp"}]},{"name":"var_1ch","type":"int32_t","kind":"b","delta":-32,"accs":[{"off":155,"type":"r","sp":18446744073709551588,"reg":"ebp"},{"off":175,"type":"r","sp":18446744073709551588,"reg":"ebp"}]},{"name":"var_24h","type":"signed int","kind":"b","delta":-40,"accs":[{"off":166,"type":"w","sp":18446744073709551580,"reg":"ebp"},{"off":178,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":192,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":224,"type":"r","sp":18446744073709551580,"reg":"ebp"},{"off":228,"type":"r","sp":18446744073709551580,"reg":"ebp"}]},{"name":"var_sp_ch","type":"int32_t","kind":"s","delta":-160,"accs":[{"off":200,"type":"w","sp":12,"reg":"esp"}]}]}
0x8048ed8={"name":"sym.my_hash","bits":32,"type":4,"cc":"cdecl","stack":60,"maxstack":60,"ninstr":66,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134516440,134516480,134516502,134516508,134516615,134516620],"vars":[{"name":"canary","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":13,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":163,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_2ch","type":"int32_t","kind":"b","delta":-48,"accs":[{"off":18,"type":"r","sp":18446744073709551572,"reg":"ebp"}]},{"name":"var_34h","type":"int32_t","kind":"b","delta":-56,"accs":[{"off":21,"type":"w","sp":18446744073709551564,"reg":"ebp"},{"off":48,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":68,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":76,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":89,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":97,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":114,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":122,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":135,"type":"r","sp":18446744073709551564,"reg":"ebp"},{"off":143,"type":"r","sp":18446744073709551564,"reg":"ebp"}]},{"name":"var_30h","type":"int32_t","kind":"b","delta":-52,"accs":[{"off":24,"type":"w","sp":18446744073709551568,"reg":"ebp"},{"off":86,"type":"r","sp":18446744073709551568,"reg":"ebp"},{"off":111,"type":"r","sp":18446744073709551568,"reg":"ebp"},{"off":132,"type":"r","sp":18446744073709551568,"reg":"ebp"},{"off":157,"type":"r","sp":18446744073709551568,"reg":"ebp"},{"off":160,"type":"r","sp":18446744073709551568,"reg":"ebp"}]},{"name":"var_38h","type":"signed int","kind":"b","delta":-60,"accs":[{"off":31,"type":"w","sp":18446744073709551560,"reg":"ebp"},{"off":40,"type":"r","sp":18446744073709551560,"reg":"ebp"},{"off":58,"type":"r","sp":18446744073709551560,"reg":"ebp"},{"off":62,"type":"r","sp":18446744073709551560,"reg":"ebp"}]}]}
0x8048f92={"name":"sym.process_hash","bits":32,"type":4,"cc":"cdecl","stack":556,"maxstack":556,"ninstr":65,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134516626,134516673,134516683,134516864,134516869],"vars":[{"name":"canary","type":"int32_t","kind":"b","delta":-16,"accs":[{"off":17,"type":"w","sp":18446744073709551604,"reg":"ebp"},{"off":226,"type":"r","sp":18446744073709551604,"reg":"ebp"}]},{"name":"var_20ch","type":"int32_t","kind":"b","delta":-528,"accs":[{"off":22,"type":"r","sp":18446744073709551092,"reg":"ebp"},{"off":107,"type":"r","sp":18446744073709551092,"reg":"ebp"},{"off":131,"type":"r","sp":18446744073709551092,"reg":"ebp"},{"off":169,"type":"r","sp":18446744073709551092,"reg":"ebp"}]},{"name":"stream","type":"FILE *","kind":"s","delta":-548,"accs":[{"off":83,"type":"w","sp":8,"reg":"esp"}]},{"name":"size","type":"int32_t","kind":"s","delta":-552,"accs":[{"off":87,"type":"w","sp":4,"reg":"esp"},{"off":137,"type":"w","sp":4,"reg":"esp"},{"off":165,"type":"w","sp":4,"reg":"esp"},{"off":200,"type":"w","sp":4,"reg":"esp"}]},{"name":"var_214h","type":"int32_t","kind":"b","delta":-536,"accs":[{"off":153,"type":"w","sp":18446744073709551084,"reg":"ebp"},{"off":159,"type":"r","sp":18446744073709551084,"reg":"ebp"}]},{"name":"ptr","type":"void *","kind":"b","delta":-532,"accs":[{"off":183,"type":"w","sp":18446744073709551088,"reg":"ebp"},{"off":194,"type":"r","sp":18446744073709551088,"reg":"ebp"},{"off":212,"type":"r","sp":18446744073709551088,"reg":"ebp"}]}]}
0x804908f={"name":"main","bits":32,"type":4,"cc":"cdecl","stack":36,"maxstack":36,"ninstr":53,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134516879,134517055,134517079],"vars":[{"name":"size","type":"size_t","kind":"s","delta":-24,"accs":[{"off":14,"type":"w","sp":12,"reg":"esp"},{"off":51,"type":"w","sp":12,"reg":"esp"}]},{"name":"mode","type":"int32_t","kind":"s","delta":-28,"accs":[{"off":22,"type":"w","sp":8,"reg":"esp"},{"off":59,"type":"w","sp":8,"reg":"esp"}]},{"name":"buf","type":"char *","kind":"s","delta":-32,"accs":[{"off":30,"type":"w","sp":4,"reg":"esp"},{"off":67,"type":"w","sp":4,"reg":"esp"},{"off":133,"type":"w","sp":4,"reg":"esp"},{"off":154,"type":"w","sp":4,"reg":"esp"}]},{"name":"var_1ch","type":"uint32_t","kind":"s","delta":-8,"accs":[{"off":120,"type":"w","sp":28,"reg":"esp"},{"off":129,"type":"r","sp":28,"reg":"esp"},{"off":170,"type":"r","sp":28,"reg":"esp"}]},{"name":"var_18h","type":"int32_t","kind":"s","delta":-12,"accs":[{"off":150,"type":"r","sp":24,"reg":"esp"},{"off":166,"type":"r","sp":24,"reg":"esp"}]}]}
0x80491a0={"name":"sym.__libc_csu_init","bits":32,"type":4,"cc":"cdecl","stack":44,"maxstack":44,"ninstr":32,"bp_frame":true,"bp_off":44,"diff":{},"bbs":[134517152,134517200,134517208,134517241],"vars":[{"name":"arg_30h","type":"int32_t","kind":"s","delta":4,"arg":true,"accs":[{"off":18,"type":"r","sp":48,"reg":"esp"}]},{"name":"arg_38h","type":"int32_t","kind":"s","delta":12,"arg":true,"accs":[{"off":56,"type":"r","sp":56,"reg":"esp"}]},{"name":"var_8h","type":"int32_t","kind":"s","delta":-36,"accs":[{"off":63,"type":"w","sp":8,"reg":"esp"}]},{"name":"arg_34h","type":"int32_t","kind":"s","delta":8,"arg":true,"accs":[{"off":67,"type":"r","sp":52,"reg":"esp"}]},{"name":"var_4h","type":"int32_t","kind":"s","delta":-40,"accs":[{"off":71,"type":"w","sp":4,"reg":"esp"}]}]}
0x8049210={"name":"sym.__libc_csu_fini","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[134517264]}
0x8049212={"name":"sym.__i686.get_pc_thunk.bx","bits":32,"type":4,"cc":"cdecl","stack":-4,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[134517266]}
0x8049220={"name":"sym.__do_global_ctors_aux","bits":32,"type":4,"cc":"cdecl","stack":12,"maxstack":12,"ninstr":18,"bp_frame":true,"bp_off":4,"diff":{},"bbs":[134517280,134517297,134517304,134517316]}
0x804924c={"name":"sym._fini","bits":32,"type":4,"cc":"cdecl","stack":-8,"maxstack":12,"ninstr":9,"bp_frame":true,"diff":{},"bbs":[134517324]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x0=[{"type":"C","str":"[29] ---- section size 1244 named .strtab"}]
0x8048154=[{"type":"C","str":"[01] -r-- section size 19 named .interp"}]
0x8048168=[{"type":"C","str":"[02] -r-- section size 32 named .note.ABI-tag"}]
0x8048188=[{"type":"C","str":"[03] -r-- section size 36 named .note.gnu.build-id"}]
0x80481ac=[{"type":"C","str":"[04] -r-- section size 44 named .gnu.hash"}]
0x80481d8=[{"type":"C","str":"[05] -r-- section size 592 named .dynsym"}]
0x8048428=[{"type":"C","str":"[06] -r-- section size 435 named .dynstr"}]
0x80485dc=[{"type":"C","str":"[07] -r-- section size 74 named .gnu.version"}]
0x8048628=[{"type":"C","str":"[08] -r-- section size 160 named .gnu.version_r"}]
0x80486c8=[{"type":"C","str":"[09] -r-- section size 24 named .rel.dyn"}]
0x80486e0=[{"type":"C","str":"[10] -r-- section size 256 named .rel.plt"}]
0x80487e0=[{"type":"C","str":"[11] -r-x section size 46 named .init"}]
0x8048810=[{"type":"C","str":"[12] -r-x section size 528 named .plt"}]
0x8048a20=[{"type":"C","str":"[13] -r-x section size 2092 named .text"}]
0x8048a35=[{"type":"t","str":"char **envp"}]
0x8048a36=[{"type":"t","str":"char **argv"}]
0x8048a37=[{"type":"t","str":"func main"}]
0x8048b3c=[{"type":"t","str":"size_t size"}]
0x8048c23=[{"type":"t","str":"FILE *stream"}]
0x8048cdf=[{"type":"t","str":"int32_t arg_8h"}]
0x8048dc7=[{"type":"t","str":"FILE *stream"}]
0x8048df5=[{"type":"t","str":"size_t size"}]
0x8048ea0=[{"type":"t","str":" ..."}]
0x8048ea4=[{"type":"t","str":"const char *format"}]
0x8048ea8=[{"type":"t","str":"size_t size"}]
0x8048eb0=[{"type":"t","str":"char *s"}]
0x8048fe5=[{"type":"t","str":"FILE *stream"}]
0x8048fe9=[{"type":"t","str":"int size"}]
0x8048ff1=[{"type":"t","str":"char *s"}]
0x8049037=[{"type":"t","str":"signed int arg_ch"}]
0x8049041=[{"type":"t","str":"int32_t arg_8h"}]
0x804905e=[{"type":"t","str":"const char *format"}]
0x804906c=[{"type":"t","str":"void *ptr"}]
0x804909d=[{"type":"t","str":"size_t size"}]
0x80490a5=[{"type":"t","str":"int mode"}]
0x80490ad=[{"type":"t","str":"char *buf"}]
0x80490b5=[{"type":"t","str":"FILE*stream"}]
0x80490c2=[{"type":"t","str":"size_t size"}]
0x80490ca=[{"type":"t","str":"int mode"}]
0x80490d2=[{"type":"t","str":"char *buf"}]
0x80490da=[{"type":"t","str":"FILE*stream"}]
0x80490e2=[{"type":"t","str":"const char *s"}]
0x80490ee=[{"type":"t","str":"time_t *timer"}]
0x80490fa=[{"type":"t","str":"int seed"}]
0x8049118=[{"type":"t","str":"const char *format"}]
0x804912d=[{"type":"t","str":"const char *format"}]
0x804913f=[{"type":"t","str":"const char *s"}]
0x804914b=[{"type":"t","str":"int status"}]
0x8049157=[{"type":"t","str":"const char *s"}]
0x8049163=[{"type":"t","str":"const char *s"}]
0x8049174=[{"type":"t","str":"const char *s"}]
0x8049180=[{"type":"t","str":"const char *string"}]
0x804924c=[{"type":"C","str":"[14] -r-x section size 26 named .fini"}]
0x8049268=[{"type":"C","str":"[15] -r-- section size 296 named .rodata"}]
0x8049274=[{"size":5,"type":"s","str":"%02x"}]
0x8049279=[{"size":16,"type":"s","str":"MD5(data) : %s\\\\n"}]
0x804928c=[{"size":48,"type":"s","str":"- Welcome to the free MD5 calculating service -"}]
0x80492bc=[{"size":35,"type":"s","str":"Are you human? input captcha : %d\\\\n"}]
0x80492e2=[{"size":15,"type":"s","str":"wrong captcha!"}]
0x80492f4=[{"size":32,"type":"s","str":"Welcome! you are authenticated."}]
0x8049314=[{"size":44,"type":"s","str":"Encode your data with BASE64 then paste me!"}]
0x8049340=[{"size":33,"type":"s","str":"Thank you for using our service."}]
0x8049361=[{"size":19,"type":"s","str":"echo `date` >> log"}]
0x8049390=[{"type":"C","str":"[16] -r-- section size 100 named .eh_frame_hdr"}]
0x80493f4=[{"type":"C","str":"[17] -r-- section size 416 named .eh_frame"}]
0x804af04=[{"type":"C","str":"[18] -rw- section size 8 named .ctors"}]
0x804af0c=[{"type":"C","str":"[19] -rw- section size 8 named .dtors"}]
0x804af14=[{"type":"C","str":"[20] -rw- section size 4 named .jcr"}]
0x804af18=[{"size":4,"type":"d","str":"4[54]"},{"type":"C","str":"[21] -rw- section size 216 named .dynamic"}]
0x804af1c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af20=[{"size":4,"type":"d","str":"4[54]"}]
0x804af24=[{"size":4,"type":"d","str":"4[54]"}]
0x804af28=[{"size":4,"type":"d","str":"4[54]"}]
0x804af2c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af30=[{"size":4,"type":"d","str":"4[54]"}]
0x804af34=[{"size":4,"type":"d","str":"4[54]"}]
0x804af38=[{"size":4,"type":"d","str":"4[54]"}]
0x804af3c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af40=[{"size":4,"type":"d","str":"4[54]"}]
0x804af44=[{"size":4,"type":"d","str":"4[54]"}]
0x804af48=[{"size":4,"type":"d","str":"4[54]"}]
0x804af4c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af50=[{"size":4,"type":"d","str":"4[54]"}]
0x804af54=[{"size":4,"type":"d","str":"4[54]"}]
0x804af58=[{"size":4,"type":"d","str":"4[54]"}]
0x804af5c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af60=[{"size":4,"type":"d","str":"4[54]"}]
0x804af64=[{"size":4,"type":"d","str":"4[54]"}]
0x804af68=[{"size":4,"type":"d","str":"4[54]"}]
0x804af6c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af70=[{"size":4,"type":"d","str":"4[54]"}]
0x804af74=[{"size":4,"type":"d","str":"4[54]"}]
0x804af78=[{"size":4,"type":"d","str":"4[54]"}]
0x804af7c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af80=[{"size":4,"type":"d","str":"4[54]"}]
0x804af84=[{"size":4,"type":"d","str":"4[54]"}]
0x804af88=[{"size":4,"type":"d","str":"4[54]"}]
0x804af8c=[{"size":4,"type":"d","str":"4[54]"}]
0x804af90=[{"size":4,"type":"d","str":"4[54]"}]
0x804af94=[{"size":4,"type":"d","str":"4[54]"}]
0x804af98=[{"size":4,"type":"d","str":"4[54]"}]
0x804af9c=[{"size":4,"type":"d","str":"4[54]"}]
0x804afa0=[{"size":4,"type":"d","str":"4[54]"}]
0x804afa4=[{"size":4,"type":"d","str":"4[54]"}]
0x804afa8=[{"size":4,"type":"d","str":"4[54]"}]
0x804afac=[{"size":4,"type":"d","str":"4[54]"}]
0x804afb0=[{"size":4,"type":"d","str":"4[54]"}]
0x804afb4=[{"size":4,"type":"d","str":"4[54]"}]
0x804afb8=[{"size":4,"type":"d","str":"4[54]"}]
0x804afbc=[{"size":4,"type":"d","str":"4[54]"}]
0x804afc0=[{"size":4,"type":"d","str":"4[54]"}]
0x804afc4=[{"size":4,"type":"d","str":"4[54]"}]
0x804afc8=[{"size":4,"type":"d","str":"4[54]"}]
0x804afcc=[{"size":4,"type":"d","str":"4[54]"}]
0x804afd0=[{"size":4,"type":"d","str":"4[54]"}]
0x804afd4=[{"size":4,"type":"d","str":"4[54]"}]
0x804afd8=[{"size":4,"type":"d","str":"4[54]"}]
0x804afdc=[{"size":4,"type":"d","str":"4[54]"}]
0x804afe0=[{"size":4,"type":"d","str":"4[54]"}]
0x804afe4=[{"size":4,"type":"d","str":"4[54]"}]
0x804afe8=[{"size":4,"type":"d","str":"4[54]"}]
0x804afec=[{"size":4,"type":"d","str":"4[54]"}]
0x804aff0=[{"size":4,"type":"d"},{"type":"C","str":"[22] -rw- section size 4 named .got"}]
0x804aff4=[{"type":"C","str":"[23] -rw- section size 140 named .got.plt"}]
0x804b000=[{"size":4,"type":"d"}]
0x804b004=[{"size":4,"type":"d"}]
0x804b008=[{"size":4,"type":"d"}]
0x804b00c=[{"size":4,"type":"d"}]
0x804b010=[{"size":4,"type":"d"}]
0x804b014=[{"size":4,"type":"d"}]
0x804b018=[{"size":4,"type":"d"}]
0x804b01c=[{"size":4,"type":"d"}]
0x804b020=[{"size":4,"type":"d"}]
0x804b024=[{"size":4,"type":"d"}]
0x804b028=[{"size":4,"type":"d"}]
0x804b02c=[{"size":4,"type":"d"}]
0x804b030=[{"size":4,"type":"d"}]
0x804b034=[{"size":4,"type":"d"}]
0x804b038=[{"size":4,"type":"d"}]
0x804b03c=[{"size":4,"type":"d"}]
0x804b040=[{"size":4,"type":"d"}]
0x804b044=[{"size":4,"type":"d"}]
0x804b048=[{"size":4,"type":"d"}]
0x804b04c=[{"size":4,"type":"d"}]
0x804b050=[{"size":4,"type":"d"}]
0x804b054=[{"size":4,"type":"d"}]
0x804b058=[{"size":4,"type":"d"}]
0x804b05c=[{"size":4,"type":"d"}]
0x804b060=[{"size":4,"type":"d"}]
0x804b064=[{"size":4,"type":"d"}]
0x804b068=[{"size":4,"type":"d"}]
0x804b06c=[{"size":4,"type":"d"}]
0x804b070=[{"size":4,"type":"d"}]
0x804b074=[{"size":4,"type":"d"}]
0x804b078=[{"size":4,"type":"d"}]
0x804b07c=[{"size":4,"type":"d"}]
0x804b080=[{"type":"C","str":"[24] -rw- section size 8 named .data"}]
0x804b0a0=[{"type":"C","str":"[25] -rw- section size 1088 named .bss"},{"size":4,"type":"d"}]
0x804b0c0=[{"size":4,"type":"d"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/pins

/core/analysis/types
*aligned_alloc=func
_Exit=func
__assert_fail=func
__bzero=func
__cxa_throw=func
__error=func
__libc_init=func
__libc_init_array=func
__libc_start_main=func
__maskrune=func
__stack_chk_fail=func
__tolower=func
__toupper=func
__uClibc_main=func
_exit=func
abort=func
abs=func
access=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atan2=func
atan2f=func
atan2l=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
bind=func
bindtextdomain=func
bsearch=func
btowc=func
bzero=func
calloc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
char=type
char *=type
chmod=func
clearerr=func
clock=func
close=func
compat_mode=func
connect=func
copysign=func
copysignf=func
copysignl=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
difftime=func
div=func
double=type
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
error=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fchmod=func
fclose=func
fdim=func
fdimf=func
fdiml=func
feclearexcept=func
fegetenv=func
fegetexceptflag=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetexceptflag=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetpos=func
fgets=func
fgetwc=func
fgetws=func
fileno=func
float=type
floor=func
floorf=func
floorl=func
fma=func
fmaf=func
fmal=func
fmax=func
fmaxf=func
fmaxl=func
fmin=func
fminf=func
fminl=func
fmod=func
fmodf=func
fmodl=func
fopen=func
fpclassify=func
fprintf=func
fputc=func
fputs=func
fputwc=func
fputws=func
fread=func
free=func
freopen=func
frexp=func
frexpf=func
frexpl=func
fscanf=func
fseek=func
fsetpos=func
fstat=func
ftell=func
fts_children_INODE64=func
fts_close_INODE64=func
fts_open_INODE64=func
fts_read_INODE64=func
fts_set_INODE64=func
func.*aligned_alloc.arg.0=size_t,alignment
func.*aligned_alloc.arg.1=size_t,size
func.*aligned_alloc.args=2
func.*aligned_alloc.ret=void
func._Exit.arg.0=int,status
func._Exit.args=1
func._Exit.noreturn=true
func._Exit.ret=void
func.__assert_fail.arg.0=const char *,assertion
func.__assert_fail.arg.1=const char *,file
func.__assert_fail.arg.2=unsigned int,line
func.__assert_fail.arg.3=const char *,function
func.__assert_fail.args=4
func.__assert_fail.noreturn=true
func.__assert_fail.ret=void
func.__bzero.arg.0=void *,s
func.__bzero.arg.1=size_t,n
func.__bzero.args=2
func.__bzero.ret=void
func.__cxa_throw.arg.0=void *,thrown_exception
func.__cxa_throw.arg.1=struct std::type_info *,tinfo
func.__cxa_throw.arg.2=void *,dest
func.__cxa_throw.args=3
func.__cxa_throw.noreturn=true
func.__cxa_throw.ret=void
func.__error.arg.0=int,status
func.__error.arg.1=int,errname
func.__error.arg.2=char *,format
func.__error.args=3
func.__error.ret=void
func.__libc_init.arg.0=int,argc
func.__libc_init.arg.1=char **,argv
func.__libc_init.arg.2=char **,envp
func.__libc_init.args=3
func.__libc_init.noreturn=true
func.__libc_init.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__libc_start_main.arg.0=func,main
func.__libc_start_main.arg.1=int,argc
func.__libc_start_main.arg.2=char **,ubp_av
func.__libc_start_main.arg.3=func,init
func.__libc_start_main.arg.4=func,fini
func.__libc_start_main.arg.5=func,rtld_fini
func.__libc_start_main.arg.6=void *,stack_end
func.__libc_start_main.args=7
func.__libc_start_main.noreturn=true
func.__libc_start_main.ret=int
func.__maskrune.arg.0=long,c
func.__maskrune.arg.1=long,f
func.__maskrune.args=2
func.__maskrune.ret=int
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=1
func.__toupper.ret=int
func.__uClibc_main.arg.0=func,main
func.__uClibc_main.arg.1=int,argc
func.__uClibc_main.arg.2=char **,argv
func.__uClibc_main.arg.3=func,app_init
func.__uClibc_main.arg.4=func,app_fini
func.__uClibc_main.arg.5=func,rtld_fini
func.__uClibc_main.arg.6=void *,stack_end
func.__uClibc_main.args=7
func.__uClibc_main.noreturn=true
func.__uClibc_main.ret=int
func._exit.arg.0=int,status
func._exit.args=1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=1
func.abs.ret=int
func.access.arg.0=const char *,path
func.access.arg.1=int,mode
func.access.args=2
func.access.ret=int
func.acos.arg.0=arithmetic,x
func.acos.args=1
func.acos.ret=floating_point
func.acosf.arg.0=float,x
func.acosf.args=1
func.acosf.ret=float
func.acosh.arg.0=arithmetic,x
func.acosh.args=1
func.acosh.ret=floating_point
func.acoshf.arg.0=float,x
func.acoshf.args=1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=1
func.acosl.ret=long double
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=const tm *,timeptr
func.asctime.args=1
func.asctime.ret=char *
func.asin.arg.0=arithmetic,x
func.asin.args=1
func.asin.ret=floating_point
func.asinf.arg.0=float,x
func.asinf.args=1
func.asinf.ret=float
func.asinh.arg.0=arithmetic,x
func.asinh.args=1
func.asinh.ret=floating_point
func.asinhf.arg.0=float,x
func.asinhf.args=1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=arithmetic,x
func.atan.args=1
func.atan.ret=floating_point
func.atan2.arg.0=arithmetic,y
func.atan2.arg.1=arithmetic,x
func.atan2.args=2
func.atan2.ret=floating_point
func.atan2f.arg.0=float,y
func.atan2f.arg.1=float,x
func.atan2f.args=2
func.atan2f.ret=float
func.atan2l.arg.0=long double,y
func.atan2l.arg.1=long double,x
func.atan2l.args=2
func.atan2l.ret=long double
func.atanf.arg.0=float,x
func.atanf.args=1
func.atanf.ret=float
func.atanh.arg.0=arithmetic,x
func.atanh.args=1
func.atanh.ret=floating_point
func.atanhf.arg.0=float,x
func.atanhf.args=1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=1
func.atanl.ret=long double
func.atexit.arg.0=func,function
func.atexit.args=1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=1
func.basename.ret=char *
func.bind.arg.0=int,socket
func.bind.arg.1=struct sockaddr*,address
func.bind.arg.2=socklen_t,address_len
func.bind.args=3
func.bind.ret=int
func.bindtextdomain.arg.0=char *,domainname
func.bindtextdomain.arg.1=char *,dirname
func.bindtextdomain.args=2
func.bindtextdomain.ret=char *
func.bsearch.arg.0=const void *,key
func.bsearch.arg.1=const void *,base
func.bsearch.arg.2=size_t,nmemb
func.bsearch.arg.3=size_t,size
func.bsearch.arg.4=int,(*compar)(const void *,const void *)
func.bsearch.args=5
func.btowc.arg.0=int,c
func.btowc.args=1
func.btowc.ret=wint_t
func.bzero.arg.0=void *,s
func.bzero.arg.1=size_t,n
func.bzero.args=2
func.bzero.ret=void
func.calloc.arg.0=size_t,nmeb
func.calloc.arg.1=size_t,size
func.calloc.args=2
func.calloc.ret=void *
func.cbrt.arg.0=arithmetic,x
func.cbrt.args=1
func.cbrt.ret=floating_point
func.cbrtf.arg.0=float,x
func.cbrtf.args=1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=1
func.cbrtl.ret=long double
func.ceil.arg.0=arithmetic,x
func.ceil.args=1
func.ceil.ret=floating_point
func.ceilf.arg.0=float,x
func.ceilf.args=1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=1
func.ceill.ret=long double
func.chmod.arg.0=const char *,path
func.chmod.arg.1=int,mode
func.chmod.args=2
func.chmod.ret=int
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=1
func.close.ret=int
func.compat_mode.arg.0=const char *,function
func.compat_mode.arg.1=const char *,mode
func.compat_mode.args=2
func.compat_mode.ret=bool
func.connect.arg.0=int,socket
func.connect.arg.1=void *,addr
func.connect.arg.2=size_t,addrlen
func.connect.args=3
func.connect.ret=ssize_t
func.copysign.arg.0=arithmetic,x
func.copysign.arg.1=arithmetic,y
func.copysign.args=2
func.copysign.ret=floating_point
func.copysignf.arg.0=float,x
func.copysignf.arg.1=float,y
func.copysignf.args=2
func.copysignf.ret=float
func.copysignl.arg.0=long double,x
func.copysignl.arg.1=long double,y
func.copysignl.args=2
func.copysignl.ret=long double
func.cos.arg.0=arithmetic,x
func.cos.args=1
func.cos.ret=floating_point
func.cosf.arg.0=float,x
func.cosf.args=1
func.cosf.ret=float
func.cosh.arg.0=arithmetic,x
func.cosh.args=1
func.cosh.ret=floating_point
func.coshf.arg.0=float,x
func.coshf.args=1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=1
func.cosl.ret=long double
func.ctime.arg.0=const time_t *,timer
func.ctime.args=1
func.ctime.ret=char *
func.difftime.arg.0=time_t,time1
func.difftime.arg.1=time_t,time0
func.difftime.args=2
func.difftime.ret=double
func.div.arg.0=int,numer
func.div.arg.1=int,denom
func.div.args=2
func.div.ret=div_t
func.erf.arg.0=arithmetic,x
func.erf.args=1
func.erf.ret=floating_point
func.erfc.arg.0=arithmetic,x
func.erfc.args=1
func.erfc.ret=floating_point
func.erfcf.arg.0=float,x
func.erfcf.args=1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.arg.1=const char *,fmt
func.err.args=1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.arg.1=int,code
func.errc.arg.2=const char *,fmt
func.errc.args=1
func.errc.noreturn=true
func.errc.ret=void
func.error.arg.0=int,status
func.error.arg.1=int,errname
func.error.arg.2=char *,format
func.error.args=3
func.error.ret=void
func.errx.arg.0=int,eval
func.errx.arg.1=const char *,fmt
func.errx.args=1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=arithmetic,x
func.exp.args=1
func.exp.ret=floating_point
func.exp2.arg.0=arithmetic,x
func.exp2.args=1
func.exp2.ret=floating_point
func.exp2f.arg.0=float,x
func.exp2f.args=1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=1
func.expl.ret=long double
func.expm1.arg.0=arithmetic,x
func.expm1.args=1
func.expm1.ret=floating_point
func.expm1f.arg.0=float,x
func.expm1f.args=1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=1
func.expm1l.ret=long double
func.fabs.arg.0=arithmetic,x
func.fabs.args=1
func.fabs.ret=floating_point
func.fabsf.arg.0=float,x
func.fabsf.args=1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=1
func.fabsl.ret=long double
func.fchmod.arg.0=int,fd
func.fchmod.arg.1=int,mode
func.fchmod.args=2
func.fchmod.ret=int
func.fclose.arg.0=FILE *,stream
func.fclose.args=1
func.fclose.ret=int
func.fdim.arg.0=arithmetic,x
func.fdim.arg.1=arithmetic,y
func.fdim.args=2
func.fdim.ret=floating_point
func.fdimf.arg.0=float,x
func.fdimf.arg.1=float,y
func.fdimf.args=2
func.fdimf.ret=float
func.fdiml.arg.0=long double,x
func.fdiml.arg.1=long double,y
func.fdiml.args=2
func.fdiml.ret=long double
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=1
func.fegetenv.ret=int
func.fegetexceptflag.arg.0=fexcept_t *,flagp
func.fegetexceptflag.arg.1=int,excepts
func.fegetexceptflag.args=2
func.fegetexceptflag.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=1
func.ferror.ret=int
func.fesetenv.arg.0=const,fenv_t*
func.fesetenv.args=1
func.fesetenv.ret=int
func.fesetexceptflag.arg.0=const,fexcept_t*
func.fesetexceptflag.arg.1=int,excepts
func.fesetexceptflag.args=2
func.fesetexceptflag.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=const,fenv_t*
func.feupdateenv.args=1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=1
func.fgetc.ret=int
func.fgetpos.arg.0=FILE *,stream
func.fgetpos.arg.1=fpos_t*,pos
func.fgetpos.args=2
func.fgetpos.ret=int
func.fgets.arg.0=char *,s
func.fgets.arg.1=int,size
func.fgets.arg.2=FILE *,stream
func.fgets.args=3
func.fgets.ret=char *
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=1
func.fgetwc.ret=wint_t
func.fgetws.arg.0=wchar_t *,s
func.fgetws.arg.1=int,n
func.fgetws.arg.2=FILE *,stream
func.fgetws.args=3
func.fgetws.ret=wchar_t*
func.fileno.arg.0=FILE *,stream
func.fileno.args=1
func.fileno.ret=int
func.floor.arg.0=arithmetic,x
func.floor.args=1
func.floor.ret=floating_point
func.floorf.arg.0=float,x
func.floorf.args=1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=1
func.floorl.ret=long double
func.fma.arg.0=arithmetic,x
func.fma.arg.1=arithmetic,y
func.fma.arg.2=arithmetic,z
func.fma.args=3
func.fma.ret=floating_point
func.fmaf.arg.0=float,x
func.fmaf.arg.1=float,y
func.fmaf.arg.2=float,z
func.fmaf.args=3
func.fmaf.ret=float
func.fmal.arg.0=long double,x
func.fmal.arg.1=long double,y
func.fmal.arg.2=long double,z
func.fmal.args=3
func.fmal.ret=long double
func.fmax.arg.0=arithmetic,x
func.fmax.arg.1=arithmetic,y
func.fmax.args=2
func.fmax.ret=floating_point
func.fmaxf.arg.0=float,x
func.fmaxf.arg.1=float,y
func.fmaxf.args=2
func.fmaxf.ret=float
func.fmaxl.arg.0=long double,x
func.fmaxl.arg.1=long double,y
func.fmaxl.args=2
func.fmaxl.ret=long double
func.fmin.arg.0=arithmetic,x
func.fmin.arg.1=arithmetic,y
func.fmin.args=2
func.fmin.ret=floating_point
func.fminf.arg.0=float,x
func.fminf.arg.1=float,y
func.fminf.args=2
func.fminf.ret=float
func.fminl.arg.0=long double,x
func.fminl.arg.1=long double,y
func.fminl.args=2
func.fminl.ret=long double
func.fmod.arg.0=arithmetic,x
func.fmod.arg.1=arithmetic,y
func.fmod.args=2
func.fmod.ret=floating_point
func.fmodf.arg.0=float,x
func.fmodf.arg.1=float,y
func.fmodf.args=2
func.fmodf.ret=float
func.fmodl.arg.0=long double,x
func.fmodl.arg.1=long double,y
func.fmodl.args=2
func.fmodl.ret=long double
func.fopen.arg.0=const char *,filename
func.fopen.arg.1=const char *,mode
func.fopen.args=2
func.fopen.ret=file*
func.fpclassify.arg.0=arithmetic,x
func.fpclassify.args=1
func.fpclassify.ret=int
func.fprintf.arg.0=FILE *,stream
func.fprintf.arg.1=const char *,format
func.fprintf.arg.2= ,...
func.fprintf.args=3
func.fprintf.ret=int
func.fputc.arg.0=int,c
func.fputc.arg.1=FILE *,stream
func.fputc.args=2
func.fputc.ret=int
func.fputs.arg.0=const char *,s
func.fputs.arg.1=FILE *,stream
func.fputs.args=2
func.fputs.ret=int
func.fputwc.arg.0=wchar_t,c
func.fputwc.arg.1=FILE *,stream
func.fputwc.args=2
func.fputwc.ret=wint_t
func.fputws.arg.0=const wchar_t *,s
func.fputws.arg.1=FILE *,stream
func.fputws.args=2
func.fputws.ret=int
func.fread.arg.0=void *,ptr
func.fread.arg.1=size_t,size
func.fread.arg.2=size_t,nmemb
func.fread.arg.3=FILE *,stream
func.fread.args=4
func.fread.ret=size_t
func.free.arg.0=void *,ptr
func.free.args=1
func.free.ret=void
func.freopen.arg.0=const char *,filename
func.freopen.arg.1=const char *,mode
func.freopen.arg.2=FILE *,stream
func.freopen.args=3
func.freopen.ret=file*
func.frexp.arg.0=arithmetic,value
func.frexp.arg.1=int *,exp
func.frexp.args=2
func.frexp.ret=floating_point
func.frexpf.arg.0=float,value
func.frexpf.arg.1=int *,exp
func.frexpf.args=2
func.frexpf.ret=float
func.frexpl.arg.0=long double,value
func.frexpl.arg.1=int *,exp
func.frexpl.args=2
func.frexpl.ret=long double
func.fscanf.arg.0=FILE *,stream
func.fscanf.arg.1=const char *,format
func.fscanf.arg.2=,...
func.fscanf.args=3
func.fscanf.ret=int
func.fseek.arg.0=FILE *,stream
func.fseek.arg.1=long,offset
func.fseek.arg.2=int,whence
func.fseek.args=3
func.fseek.ret=int
func.fsetpos.arg.0=FILE *,stream
func.fsetpos.arg.1=const fpos_t*,pos
func.fsetpos.args=2
func.fsetpos.ret=int
func.fstat.arg.0=int,fildes
func.fstat.arg.1=void *,buf
func.fstat.args=2
func.fstat.ret=int
func.ftell.arg.0=FILE *,stream
func.ftell.args=1
func.ftell.ret=long
func.fts_children_INODE64.arg.0=void*,ftsp
func.fts_children_INODE64.arg.1=int,opotions
func.fts_children_INODE64.args=2
func.fts_children_INODE64.ret=void *
func.fts_close_INODE64.arg.0=void*,ftsp
func.fts_close_INODE64.args=1
func.fts_close_INODE64.ret=int
func.fts_open_INODE64.arg.0=const char *,path_argv
func.fts_open_INODE64.arg.1=int,options
func.fts_open_INODE64.arg.2=void *,compar
func.fts_open_INODE64.arg.3=void *,ftsen$INODE64t
func.fts_open_INODE64.args=4
func.fts_open_INODE64.ret=void *
func.fts_read_INODE64.arg.0=void*,ftsp
func.fts_read_INODE64.args=1
func.fts_read_INODE64.ret=void *
func.fts_set_INODE64.arg.0=void*,ftsp
func.fts_set_INODE64.arg.1=void*,f
func.fts_set_INODE64.arg.2=int,options
func.fts_set_INODE64.args=3
func.fts_set_INODE64.ret=int
func.fwide.arg.0=FILE *,stream
func.fwide.arg.1=int,mode
func.fwide.args=2
func.fwide.ret=int
func.fwprintf.arg.0=FILE *,stream
func.fwprintf.arg.1=const wchar_t *,format
func.fwprintf.args=2
func.fwprintf.ret=int
func.fwrite.arg.0=const void *,ptr
func.fwrite.arg.1=size_t,size
func.fwrite.arg.2=size_t,nitems
func.fwrite.arg.3=FILE *,stream
func.fwrite.args=4
func.fwrite.ret=size_t
func.fwscanf.arg.0=FILE *,stream
func.fwscanf.arg.1=const wchar_t *,format
func.fwscanf.args=2
func.fwscanf.ret=int
func.getc.arg.0=FILE *,stream
func.getc.args=1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getopt.arg.0=int,argc
func.getopt.arg.1=const char * *,argv
func.getopt.arg.2=const char *,optstring
func.getopt.args=3
func.getopt.ret=int
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=1
func.gets.ret=char *
func.getsockname.arg.0=int,sockfd
func.getsockname.arg.1=struct sockaddr *,addr
func.getsockname.arg.2=socklen_t *,addrlen
func.getsockname.args=3
func.getsockname.ret=int
func.getsockopt.arg.0=int,sockfd
func.getsockopt.arg.1=int,level
func.getsockopt.arg.2=int,optname
func.getsockopt.arg.3=void *,optval
func.getsockopt.arg.4=socklen_t *,optlen
func.getsockopt.args=5
func.getsockopt.ret=int
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=const time_t *,timer
func.gmtime.args=1
func.gmtime.ret=tm*
func.group_from_gid.arg.0=gid_t,gid
func.group_from_gid.arg.1=int,nogroup
func.group_from_gid.args=2
func.group_from_gid.ret=char *
func.group_from_uid.include=grp.h
func.humanize_number.arg.0=char *,buf
func.humanize_number.arg.1=size_t,len
func.humanize_number.arg.2=int64_t,number
func.humanize_number.arg.3=const char *,suffix
func.humanize_number.arg.4=int,scale
func.humanize_number.arg.5=int,flags
func.humanize_number.args=1
func.humanize_number.ret=int
func.hypot.arg.0=arithmetic,x
func.hypot.arg.1=arithmetic,y
func.hypot.args=2
func.hypot.ret=floating_point
func.hypotf.arg.0=float,x
func.hypotf.arg.1=float,y
func.hypotf.args=2
func.hypotf.ret=float
func.hypotl.arg.0=long double,x
func.hypotl.arg.1=long double,y
func.hypotl.args=2
func.hypotl.ret=long double
func.ilogb.arg.0=arithmetic,x
func.ilogb.args=1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=1
func.imaxabs.ret=intmax_t
func.imaxdiv.arg.0=intmax_t,numer
func.imaxdiv.arg.1=intmax_t,denom
func.imaxdiv.args=2
func.imaxdiv.ret=imaxdiv_t
func.inet_aton.arg.0=const char *,cp
func.inet_aton.arg.1=void *,pin
func.inet_aton.args=2
func.inet_aton.ret=int
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=1
func.inet_ntoa.ret=char *
func.initstate.arg.0=uint32_t,state
func.initstate.arg.1=char *,state
func.initstate.arg.2=size_t,size
func.initstate.args=3
func.initstate.ret=char *
func.ioctl.arg.0=int,fd
func.ioctl.arg.1=unsigned long,request
func.ioctl.args=2
func.ioctl.ret=int
func.isalnum.arg.0=int,c
func.isalnum.args=1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=1
func.isdigit.ret=int
func.isfinite.arg.0=arithmetic,x
func.isfinite.args=1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=1
func.isgraph.ret=int
func.isgreater.arg.0=arithmetic,x
func.isgreater.arg.1=arithmetic,y
func.isgreater.args=2
func.isgreater.ret=bool
func.isgreaterequal.arg.0=arithmetic,x
func.isgreaterequal.arg.1=arithmetic,y
func.isgreaterequal.args=2
func.isgreaterequal.ret=bool
func.isinf.arg.0=arithmetic,x
func.isinf.args=1
func.isinf.ret=bool
func.isless.arg.0=arithmetic,x
func.isless.arg.1=arithmetic,y
func.isless.args=2
func.isless.ret=bool
func.islessequal.arg.0=arithmetic,x
func.islessequal.arg.1=arithmetic,y
func.islessequal.args=2
func.islessequal.ret=bool
func.islessgreater.arg.0=arithmetic,x
func.islessgreater.arg.1=arithmetic,y
func.islessgreater.args=2
func.islessgreater.ret=bool
func.islower.arg.0=int,c
func.islower.args=1
func.islower.ret=int
func.isnan.arg.0=arithmetic,x
func.isnan.args=1
func.isnan.ret=bool
func.isnormal.arg.0=arithmetic,x
func.isnormal.args=1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=1
func.isspace.ret=int
func.isunordered.arg.0=arithmetic,x
func.isunordered.arg.1=arithmetic,y
func.isunordered.args=2
func.isunordered.ret=bool
func.isupper.arg.0=int,c
func.isupper.args=1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=1
func.iswcntrl.ret=int
func.iswctype.arg.0=wint_t,wc
func.iswctype.arg.1=wctype_t,desc
func.iswctype.args=2
func.iswctype.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=1
func.isxdigit.ret=int
func.kill.arg.0=pid_t,pid
func.kill.arg.1=int,sig
func.kill.args=2
func.kill.ret=int
func.labs.arg.0=long,j
func.labs.args=1
func.labs.ret=long
func.ldexp.arg.0=arithmetic,value
func.ldexp.arg.1=int,exp
func.ldexp.args=2
func.ldexp.ret=floating_point
func.ldexpf.arg.0=float,value
func.ldexpf.arg.1=int,exp
func.ldexpf.args=2
func.ldexpf.ret=float
func.ldexpl.arg.0=long double,value
func.ldexpl.arg.1=int,exp
func.ldexpl.args=2
func.ldexpl.ret=long double
func.ldiv.arg.0=long,numer
func.ldiv.arg.1=long,denom
func.ldiv.args=2
func.ldiv.ret=ldiv_t
func.lgamma.arg.0=arithmetic,x
func.lgamma.args=1
func.lgamma.ret=floating_point
func.lgammaf.arg.0=float,x
func.lgammaf.args=1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=1
func.llabs.ret=long long
func.lldiv.arg.0=long long,numer
func.lldiv.arg.1=long long,denom
func.lldiv.args=2
func.lldiv.ret=lldiv_t
func.llrint.arg.0=arithmetic,x
func.llrint.args=1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=1
func.llrintl.ret=long long
func.llround.arg.0=arithmetic,x
func.llround.args=1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=lconv*
func.localtime.arg.0=const time_t *,timer
func.localtime.args=1
func.localtime.ret=tm*
func.log.arg.0=arithmetic,x
func.log.args=1
func.log.ret=floating_point
func.log10.arg.0=arithmetic,x
func.log10.args=1
func.log10.ret=floating_point
func.log10f.arg.0=float,x
func.log10f.args=1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=1
func.log10l.ret=long double
func.log1p.arg.0=arithmetic,x
func.log1p.args=1
func.log1p.ret=floating_point
func.log1pf.arg.0=float,x
func.log1pf.args=1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=1
func.log1pl.ret=long double
func.log2.arg.0=arithmetic,x
func.log2.args=1
func.log2.ret=floating_point
func.log2f.arg.0=float,x
func.log2f.args=1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=1
func.log2l.ret=long double
func.logb.arg.0=arithmetic,x
func.logb.args=1
func.logb.ret=floating_point
func.logbf.arg.0=float,x
func.logbf.args=1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=1
func.logl.ret=long double
func.longjmp.arg.0=jmp_buf,env
func.longjmp.arg.1=int,val
func.longjmp.args=2
func.longjmp.ret=void
func.lrint.arg.0=arithmetic,x
func.lrint.args=1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=1
func.lrintl.ret=long
func.lround.arg.0=arithmetic,x
func.lround.args=1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=1
func.lroundl.ret=long
func.lstat.arg.0=const char *,path
func.lstat.arg.1=void *,buf
func.lstat.args=2
func.lstat.ret=void
func.main.arg.0=int,argc
func.main.arg.1=char **,argv
func.main.arg.2=char **,envp
func.main.args=3
func.main.ret=int
func.malloc.arg.0=size_t,size
func.malloc.args=1
func.malloc.ret= void *
func.maskrune.arg.0=uint32_t,c
func.maskrune.arg.1=unsigned long,f
func.maskrune.args=2
func.maskrune.ret=int
func.mblen.arg.0=const char *,s
func.mblen.arg.1=size_t,n
func.mblen.args=2
func.mblen.ret=int
func.mbrlen.arg.0=const char *,s
func.mbrlen.arg.1=size_t,n
func.mbrlen.arg.2=mbstate_t *,ps
func.mbrlen.args=3
func.mbrlen.ret=size_t
func.mbrtowc.arg.0=wchar_t *,pwc
func.mbrtowc.arg.1=const char *,s
func.mbrtowc.arg.2=size_t,n
func.mbrtowc.arg.3=mbstate_t *,ps
func.mbrtowc.args=4
func.mbrtowc.ret=size_t
func.mbsinit.arg.0=const mbstate_t *,ps
func.mbsinit.args=1
func.mbsinit.ret=int
func.mbsrtowcs.arg.0=wchar_t *,dst
func.mbsrtowcs.arg.1=const char * *,src
func.mbsrtowcs.arg.2=size_t,len
func.mbsrtowcs.arg.3=mbstate_t *,ps
func.mbsrtowcs.args=4
func.mbsrtowcs.ret=size_t
func.mbstowcs.arg.0=wchar_t *,pwcs
func.mbstowcs.arg.1=const char *,s
func.mbstowcs.arg.2=size_t,n
func.mbstowcs.args=3
func.mbstowcs.ret=size_t
func.mbtowc.arg.0=wchar_t *,pwc
func.mbtowc.arg.1=const char *,s
func.mbtowc.arg.2=size_t,n
func.mbtowc.args=3
func.mbtowc.ret=int
func.memchr.arg.0=void *,s
func.memchr.arg.1=int,c
func.memchr.arg.2=size_t,n
func.memchr.args=3
func.memchr.ret=void *
func.memcmp.arg.0=const void *,s1
func.memcmp.arg.1=const void *,s2
func.memcmp.arg.2=size_t,n
func.memcmp.args=3
func.memcmp.ret=int
func.memcpy.arg.0=void *,s1
func.memcpy.arg.1=const void *,s2
func.memcpy.arg.2=size_t,n
func.memcpy.args=3
func.memcpy.ret=void *
func.memmem.arg.0=const void *,big
func.memmem.arg.1=int,big_len
func.memmem.arg.2=const void *,little
func.memmem.arg.3=int,little_len
func.memmem.args=4
func.memmem.ret=void *
func.memmove.arg.0=void *,s1
func.memmove.arg.1=const void *,s2
func.memmove.arg.2=size_t,n
func.memmove.args=3
func.memmove.ret=void *
func.memset.arg.0=void *,s
func.memset.arg.1=int,c
func.memset.arg.2=size_t,n
func.memset.args=3
func.memset.ret=void *
func.mkstemp.arg.0=char *,template
func.mkstemp.args=1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=1
func.mktemp.ret=char *
func.mktime.arg.0=tm *,timeptr
func.mktime.args=1
func.mktime.ret=time_t
func.mmap.arg.0=void*,addr
func.mmap.arg.1=size_t,length
func.mmap.arg.2=int,prot
func.mmap.arg.3=int,flags
func.mmap.arg.4=int,fd
func.mmap.arg.5=size_t,offset
func.mmap.args=6
func.mmap.ret=void*
func.modf.arg.0=floating_point,value
func.modf.arg.1=floating_point *,iptr
func.modf.args=2
func.modf.ret=floating_point
func.modff.arg.0=float,value
func.modff.arg.1=float *,iptr
func.modff.args=2
func.modff.ret=float
func.modfl.arg.0=long double,value
func.modfl.arg.1=long double *,iptr
func.modfl.args=2
func.modfl.ret=long double
func.munmap.arg.0=void*,addr
func.munmap.arg.1=size_t,length
func.munmap.args=2
func.munmap.ret=int
func.nan.arg.0=const char *,str
func.nan.args=1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=1
func.nanl.ret=long double
func.nanosleep.arg.0=const struct timespec *,req
func.nanosleep.arg.1=struct timespec *,rem
func.nanosleep.args=2
func.nanosleep.ret=int
func.nearbyint.arg.0=arithmetic,x
func.nearbyint.args=1
func.nearbyint.ret=floating_point
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=1
func.nearbyintl.ret=long double
func.nextafter.arg.0=arithmetic,x
func.nextafter.arg.1=arithmetic,y
func.nextafter.args=2
func.nextafter.ret=floating_point
func.nextafterf.arg.0=float,x
func.nextafterf.arg.1=float,y
func.nextafterf.args=2
func.nextafterf.ret=float
func.nextafterl.arg.0=long double,x
func.nextafterl.arg.1=long double,y
func.nextafterl.args=2
func.nextafterl.ret=long double
func.nexttoward.arg.0=arithmetic,x
func.nexttoward.arg.1=long double,y
func.nexttoward.args=2
func.nexttoward.ret=floating_point
func.nexttowardf.arg.0=float,x
func.nexttowardf.arg.1=long double,y
func.nexttowardf.args=2
func.nexttowardf.ret=float
func.nexttowardl.arg.0=long double,x
func.nexttowardl.arg.1=long double,y
func.nexttowardl.args=2
func.nexttowardl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=1
func.nl_langinfo.ret=char *
func.nl_langinfo_l.arg.0=nl_item,item
func.nl_langinfo_l.arg.1=locale_t locale
func.nl_langinfo_l.args=2
func.nl_langinfo_l.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=1
func.objc_enumerationMutation.ret=void
func.objc_msgSend.arg.0=void *,instance
func.objc_msgSend.arg.1=char *,selector
func.objc_msgSend.args=2
func.objc_msgSend.ret=void *
func.objc_msgSendSuper2.arg.0=void *,instance
func.objc_msgSendSuper2.arg.1=char *,selector
func.objc_msgSendSuper2.args=2
func.objc_msgSendSuper2.ret=void *
func.objc_release.arg.0=void *,instance
func.objc_release.args=1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=1
func.objc_retainAutoreleasedReturnValue.ret=void
func.objc_storeStrong.arg.0=void *,instance
func.objc_storeStrong.arg.1=int,type
func.objc_storeStrong.args=2
func.objc_storeStrong.ret=void *
func.open.arg.0=const char *,path
func.open.arg.1=int,oflag
func.open.args=2
func.open.ret=int
func.openat.arg.0=int,fd
func.openat.arg.1=const char *,path
func.openat.arg.2=int,oflag
func.openat.args=3
func.openat.ret=int
func.pclose.arg.0=FILE *,stream
func.pclose.args=1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=1
func.perror.ret=void
func.popen.arg.0=const char *,filename
func.popen.arg.1=const char *,mode
func.popen.args=2
func.popen.ret=file*
func.pow.arg.0=arithmetic,x
func.pow.arg.1=arithmetic,y
func.pow.args=2
func.pow.ret=floating_point
func.powf.arg.0=float,x
func.powf.arg.1=float,y
func.powf.args=2
func.powf.ret=float
func.powl.arg.0=long double,x
func.powl.arg.1=long double,y
func.powl.args=2
func.powl.ret=long double
func.prctl.arg.0=int,option
func.prctl.arg.1=unsigned long,v2
func.prctl.arg.2=unsigned long,v3
func.prctl.arg.3=unsigned long,v4
func.prctl.arg.4=unsigned long,v5
func.prctl.args=5
func.prctl.ret=int
func.printf.arg.0=const char *,format
func.printf.args=1
func.printf.ret=int
func.ptrace.arg.0=__ptrace_request,request
func.ptrace.arg.1=pid_t,pid
func.ptrace.arg.2=void*,addr
func.ptrace.arg.3=void*,data
func.ptrace.args=4
func.ptrace.ret=long
func.putc.arg.0=int,c
func.putc.arg.1=FILE *,stream
func.putc.args=2
func.putc.ret=int
func.putchar.arg.0=int,c
func.putchar.args=1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=1
func.pututxline.ret=void *
func.putwc.arg.0=wchar_t,c
func.putwc.arg.1=FILE *,stream
func.putwc.args=2
func.putwc.ret=wint_t
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=1
func.putwchar.ret=wint_t
func.qsort.arg.0=void *,base
func.qsort.arg.1=size_t,nmemb
func.qsort.arg.2=size_t,size
func.qsort.arg.3=int(*compar)(const void *,const void *)
func.qsort.args=4
func.quick_exit.arg.0=int,status
func.quick_exit.args=1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.read.arg.0=int,fildes
func.read.arg.1=void *,buf
func.read.arg.2=size_t,nbyte
func.read.args=3
func.read.ret=ssize_t
func.realloc.arg.0=void *,ptr
func.realloc.arg.1=size_t,size
func.realloc.args=2
func.realloc.ret=void *
func.reallocf.arg.0=void *,ptr
func.reallocf.arg.1=size_t,size
func.reallocf.args=2
func.reallocf.ret=void *
func.recv.arg.0=int,socket
func.recv.arg.1=void *,buffer
func.recv.arg.2=size_t,length
func.recv.arg.3=int,flags
func.recv.args=4
func.recv.ret=ssize_t
func.remainder.arg.0=arithmetic,x
func.remainder.arg.1=arithmetic,y
func.remainder.args=2
func.remainder.ret=floating_point
func.remainderf.arg.0=float,x
func.remainderf.arg.1=float,y
func.remainderf.args=2
func.remainderf.ret=float
func.remainderl.arg.0=long double,x
func.remainderl.arg.1=long double,y
func.remainderl.args=2
func.remainderl.ret=long double
func.remove.arg.0=const char *,filename
func.remove.args=1
func.remove.ret=int
func.remquo.arg.0=arithmetic,x
func.remquo.arg.1=arithmetic,y
func.remquo.arg.2=int *,pquo
func.remquo.args=3
func.remquo.ret=floating_point
func.remquof.arg.0=float,x
func.remquof.arg.1=float,y
func.remquof.arg.2=int *,pquo
func.remquof.args=3
func.remquof.ret=float
func.remquol.arg.0=long double,x
func.remquol.arg.1=long double,y
func.remquol.arg.2=int *,pquo
func.remquol.args=3
func.remquol.ret=long double
func.rename.arg.0=const char *,oldpath
func.rename.arg.1=const char *,newpath
func.rename.args=2
func.rename.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=1
func.rewind.ret=void
func.rint.arg.0=arithmetic,x
func.rint.args=1
func.rint.ret=floating_point
func.rintf.arg.0=float,x
func.rintf.args=1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=1
func.rintl.ret=long double
func.round.arg.0=arithmetic,x
func.round.args=1
func.round.ret=floating_point
func.roundf.arg.0=float,x
func.roundf.args=1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=1
func.roundl.ret=long double
func.scalbln.arg.0=arithmetic,x
func.scalbln.arg.1=long,ex
func.scalbln.args=2
func.scalbln.ret=floating_point
func.scalblnf.arg.0=float,x
func.scalblnf.arg.1=long,ex
func.scalblnf.args=2
func.scalblnf.ret=float
func.scalblnl.arg.0=long double,x
func.scalblnl.arg.1=long,ex
func.scalblnl.args=2
func.scalblnl.ret=long double
func.scalbn.arg.0=arithmetic,x
func.scalbn.arg.1=int,ex
func.scalbn.args=2
func.scalbn.ret=floating_point
func.scalbnf.arg.0=float,x
func.scalbnf.arg.1=int,ex
func.scalbnf.args=2
func.scalbnf.ret=float
func.scalbnl.arg.0=long double,x
func.scalbnl.arg.1=int,ex
func.scalbnl.args=2
func.scalbnl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=1
func.scanf.ret=int
func.select.arg.0=int,nfds
func.select.arg.1=fd_set *,readfds
func.select.arg.2=fd_set *,writefds
func.select.arg.3=fd_set *,exceptfds
func.select.arg.4=struct timeval *,timeout
func.select.args=5
func.select.ret=int
func.send.arg.0=int,socket
func.send.arg.1=void *,buffer
func.send.arg.2=size_t,length
func.send.arg.3=int,flags
func.send.args=4
func.send.ret=ssize_t
func.setbuf.arg.0=FILE *,stream
func.setbuf.arg.1=char *,buf
func.setbuf.args=2
func.setbuf.ret=void
func.setenv.arg.0=const char *,name
func.setenv.arg.1=const char *,value
func.setenv.arg.2=int,overwrite
func.setenv.args=3
func.setenv.ret=int
func.setjmp.arg.0=jmpbuf,env
func.setjmp.args=1
func.setjmp.ret=int
func.setlocale.arg.0=int,category
func.setlocale.arg.1=const char *,locale
func.setlocale.args=2
func.setlocale.ret=char *
func.setsockopt.arg.0=int,sockfd
func.setsockopt.arg.1=int,level
func.setsockopt.arg.2=int,optname
func.setsockopt.arg.3=void *,optval
func.setsockopt.arg.4=socklen_t,optlen
func.setsockopt.args=5
func.setsockopt.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=1
func.setstate.ret=const char *
func.setvbuf.arg.0=FILE*,stream
func.setvbuf.arg.1=char *,buf
func.setvbuf.arg.2=int,mode
func.setvbuf.arg.3=size_t,size
func.setvbuf.args=4
func.setvbuf.ret=int
func.sigaction.arg.0=int,signum
func.sigaction.arg.1=const struct sigaction *,act
func.sigaction.arg.2=struct sigaction *,oldact
func.sigaction.args=3
func.sigaction.ret=int
func.signal.arg.0=int,sig
func.signal.arg.1=void *,func
func.signal.args=2
func.signal.ret=void
func.signbit.arg.0=arithmetic,x
func.signbit.args=1
func.signbit.ret=bool
func.sin.arg.0=arithmetic,x
func.sin.args=1
func.sin.ret=floating_point
func.sinf.arg.0=float,x
func.sinf.args=1
func.sinf.ret=float
func.sinh.arg.0=arithmetic,x
func.sinh.args=1
func.sinh.ret=floating_point
func.sinhf.arg.0=float,x
func.sinhf.args=1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=1
func.sleep.ret=int
func.snprintf.arg.0=char *,s
func.snprintf.arg.1=size_t,size
func.snprintf.arg.2=const char *,format
func.snprintf.arg.3=,...
func.snprintf.args=4
func.snprintf.ret=int
func.snprintf_chk.arg.0=char *,s
func.snprintf_chk.arg.1=size_t,size
func.snprintf_chk.arg.2=const char *,format
func.snprintf_chk.arg.3=,...
func.snprintf_chk.args=4
func.snprintf_chk.ret=int
func.socket.arg.0=int,domain
func.socket.arg.1=int,type
func.socket.arg.2=int,protocol
func.socket.args=3
func.socket.ret=int
func.sprintf.arg.0=char *,s
func.sprintf.arg.1=const char *,format
func.sprintf.arg.2=,...
func.sprintf.args=3
func.sprintf.ret=int
func.sprintf_chk.arg.0=char *,s
func.sprintf_chk.arg.1=const char *,format
func.sprintf_chk.arg.2=,...
func.sprintf_chk.args=3
func.sprintf_chk.ret=int
func.sqrt.arg.0=arithmetic,x
func.sqrt.args=1
func.sqrt.ret=floating_point
func.sqrtf.arg.0=float,x
func.sqrtf.args=1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.sscanf.arg.0=const char *,s
func.sscanf.arg.1=const char *,format
func.sscanf.arg.2= ,...
func.sscanf.args=3
func.sscanf.ret=int
func.strcasecmp.arg.0=const char *,s1
func.strcasecmp.arg.1=const char *,s2
func.strcasecmp.args=2
func.strcasecmp.ret=int
func.strcat.arg.0=char *,s1
func.strcat.arg.1=const char *,s2
func.strcat.args=2
func.strcat.ret=char *
func.strchr.arg.0=const char *,s
func.strchr.arg.1=int,c
func.strchr.args=2
func.strchr.ret=char *
func.strcmp.arg.0=const char *,s1
func.strcmp.arg.1=const char *,s2
func.strcmp.args=2
func.strcmp.ret=int
func.strcoll.arg.0=const char *,s1
func.strcoll.arg.1=const char *,s2
func.strcoll.args=2
func.strcoll.ret=int
func.strcpy.arg.0=char *,dest
func.strcpy.arg.1=const char *,src
func.strcpy.args=2
func.strcpy.ret=char *
func.strcpy_chk.arg.0=char *,dest
func.strcpy_chk.arg.1=const char *,src
func.strcpy_chk.args=2
func.strcpy_chk.ret=char *
func.strcspn.arg.0=const char *,s1
func.strcspn.arg.1=const char *,s2
func.strcspn.args=2
func.strcspn.ret=size_t
func.strdup.arg.0=const char *,src
func.strdup.args=1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=1
func.strerror.ret=char *
func.strftime.arg.0=char *,s
func.strftime.arg.1=size_t,maxsize
func.strftime.arg.2=const char *,format
func.strftime.arg.3=const tm *,timeptr
func.strftime.args=4
func.strftime.ret=size_t
func.strlcpy.arg.0=char *,dest
func.strlcpy.arg.1=const char *,src
func.strlcpy.arg.2=size_t, n
func.strlcpy.args=3
func.strlcpy.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=1
func.strlen.ret=size_t
func.strmode.arg.0=int,mode
func.strmode.arg.1=char *,bp
func.strmode.args=2
func.strmode.ret=void
func.strncasecmp.arg.0=const char *,s1
func.strncasecmp.arg.1=const char *,s2
func.strncasecmp.arg.2=size_t,n
func.strncasecmp.args=3
func.strncasecmp.ret=int
func.strncat.arg.0=char *,s1
func.strncat.arg.1=const char *,s2
func.strncat.arg.2=size_t,n
func.strncat.args=3
func.strncat.ret=char *
func.strncmp.arg.0=const char *,s1
func.strncmp.arg.1=const char *,s2
func.strncmp.arg.2=size_t,n
func.strncmp.args=3
func.strncmp.ret=int
func.strncpy.arg.0=char *,dest
func.strncpy.arg.1=const char *,src
func.strncpy.arg.2=size_t, n
func.strncpy.args=3
func.strncpy.ret=char *
func.strndup.arg.0=const char *,src
func.strndup.arg.1=int,n
func.strndup.args=2
func.strndup.ret=char *
func.strpbrk.arg.0=const char *,s1
func.strpbrk.arg.1=const char *,s2
func.strpbrk.args=2
func.strpbrk.ret=char *
func.strrchr.arg.0=const char *,s
func.strrchr.arg.1=int,c
func.strrchr.args=2
func.strrchr.ret=char *
func.strspn.arg.0=const char *,s1
func.strspn.arg.1=const char *,s2
func.strspn.args=2
func.strspn.ret=size_t
func.strstr.arg.0=const char *,s1
func.strstr.arg.1=const char *,s2
func.strstr.args=2
func.strstr.ret=char *
func.strtod.arg.0=const char *,str
func.strtod.arg.1=char * *,endptr
func.strtod.args=2
func.strtod.ret=double
func.strtof.arg.0=const char *,str
func.strtof.arg.1=char * *,endptr
func.strtof.args=2
func.strtof.ret=float
func.strtoimax.arg.0=const char *,str
func.strtoimax.arg.1=char * *,endptr
func.strtoimax.arg.2=int,base
func.strtoimax.args=3
func.strtoimax.ret=intmax_t
func.strtok.arg.0=char *,s1
func.strtok.arg.1=const char *,s2
func.strtok.args=2
func.strtok.ret=char *
func.strtol.arg.0=const char *,str
func.strtol.arg.1=char * *,endptr
func.strtol.arg.2=int,base
func.strtol.args=3
func.strtol.ret=long
func.strtold.arg.0=const char *,str
func.strtold.arg.1=char * *,endptr
func.strtold.args=2
func.strtold.ret=long double
func.strtoll.arg.0=const char *,str
func.strtoll.arg.1=char * *,endptr
func.strtoll.arg.2=int,base
func.strtoll.args=3
func.strtoll.ret=long long
func.strtoul.arg.0=const char *,str
func.strtoul.arg.1=char * *,endptr
func.strtoul.arg.2=int,base
func.strtoul.args=3
func.strtoul.ret=long
func.strtoull.arg.0=const char *,str
func.strtoull.arg.1=char * *,endptr
func.strtoull.arg.2=int,base
func.strtoull.args=3
func.strtoull.ret=long long
func.strtoumax.arg.0=const char *,str
func.strtoumax.arg.1=char * *,endptr
func.strtoumax.arg.2=int,base
func.strtoumax.args=3
func.strtoumax.ret=uintmax_t
func.strxfrm.arg.0=char *,s1
func.strxfrm.arg.1=const char *,s2
func.strxfrm.arg.2=size_t,n
func.strxfrm.args=3
func.strxfrm.ret=size_t
func.swprintf.arg.0=wchar_t *,s
func.swprintf.arg.1=size_t,n
func.swprintf.arg.2=const wchar_t *,format
func.swprintf.args=3
func.swprintf.ret=int
func.swscanf.arg.0=const wchar_t *,s
func.swscanf.arg.1=const wchar_t *,format
func.swscanf.args=2
func.swscanf.ret=int
func.sym.Base64Decode.arg.0=int32_t,arg_8h
func.sym.Base64Decode.arg.1=int32_t,arg_ch
func.sym.Base64Decode.args=2
func.sym.Base64Encode.arg.0=int32_t,arg_8h
func.sym.Base64Encode.arg.1=void **,arg_ch
func.sym.Base64Encode.args=2
func.sym.__libc_csu_init.arg.0=int32_t,arg_30h
func.sym.__libc_csu_init.arg.1=int32_t,arg_34h
func.sym.__libc_csu_init.arg.2=int32_t,arg_38h
func.sym.__libc_csu_init.args=3
func.sym.calcDecodeLength.arg.0=int32_t,arg_8h
func.sym.calcDecodeLength.args=1
func.sym.calc_md5.arg.0=int32_t,arg_8h
func.sym.calc_md5.arg.1=signed int,arg_ch
func.sym.calc_md5.args=2
func.symlink.arg.0=const char *,path1
func.symlink.arg.1=const char *,path2
func.symlink.args=2
func.symlink.ret=int
func.system.arg.0=const char *,string
func.system.args=1
func.system.ret=int
func.tan.arg.0=arithmetic,x
func.tan.args=1
func.tan.ret=floating_point
func.tanf.arg.0=float,x
func.tanf.args=1
func.tanf.ret=float
func.tanh.arg.0=arithmetic,x
func.tanh.args=1
func.tanh.ret=floating_point
func.tanhf.arg.0=float,x
func.tanhf.args=1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=1
func.textdomain.ret=char *
func.tgamma.arg.0=arithmetic,x
func.tgamma.args=1
func.tgamma.ret=floating_point
func.tgammaf.arg.0=float,x
func.tgammaf.args=1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=1
func.tgammal.ret=long double
func.tgoto.arg.0=const char *,cap
func.tgoto.arg.1=int,col
func.tgoto.arg.2=int,row
func.tgoto.args=3
func.tgoto.ret=char *
func.time.arg.0=time_t *,timer
func.time.args=1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=file*
func.tmpnam.arg.0=char *,s
func.tmpnam.args=1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=1
func.toupper.ret=int
func.towctrans.arg.0=wint_t,wc
func.towctrans.arg.1=wctrans_t,desc
func.towctrans.args=2
func.towctrans.ret=wint_t
func.towlower.arg.0=wint_t,wc
func.towlower.args=1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=1
func.towupper.ret=wint_t
func.trunc.arg.0=arithmetic,x
func.trunc.args=1
func.trunc.ret=floating_point
func.truncf.arg.0=float,x
func.truncf.args=1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=1
func.umask.ret=int
func.ungetc.arg.0=int,c
func.ungetc.arg.1=FILE *,stream
func.ungetc.args=2
func.ungetc.ret=int
func.ungetwc.arg.0=wint_t,c
func.ungetwc.arg.1=FILE *,stream
func.ungetwc.args=2
func.ungetwc.ret=wint_t
func.unlink.arg.0=const char *,path
func.unlink.args=1
func.unlink.ret=int
func.user_from_uid.arg.0=uid_t,uid
func.user_from_uid.arg.1=int,nouser
func.user_from_uid.args=2
func.user_from_uid.include=pwd.h
func.user_from_uid.ret=char *
func.usleep.arg.0=int,s
func.usleep.args=1
func.usleep.ret=int
func.vfprintf.arg.0=FILE *,stream
func.vfprintf.arg.1=const char *,format
func.vfprintf.arg.2=va_list,ap
func.vfprintf.args=3
func.vfprintf.ret=int
func.vfscanf.arg.0=FILE *,stream
func.vfscanf.arg.1=const char *,format
func.vfscanf.arg.2=va_list,ap
func.vfscanf.args=3
func.vfscanf.ret=int
func.vfwprintf.arg.0=FILE *,stream
func.vfwprintf.arg.1=const wchar_t *,format
func.vfwprintf.arg.2=va_list,arg
func.vfwprintf.args=3
func.vfwprintf.ret=int
func.vfwscanf.arg.0=FILE *,stream
func.vfwscanf.arg.1=const wchar_t *,format
func.vfwscanf.arg.2=va_list,arg
func.vfwscanf.args=3
func.vfwscanf.ret=int
func.vprintf.arg.0=const char *,format
func.vprintf.arg.1=va_list,ap
func.vprintf.args=2
func.vprintf.ret=int
func.vscanf.arg.0=const char *,format
func.vscanf.arg.1=va_list,ap
func.vscanf.args=2
func.vscanf.ret=int
func.vsnprintf.arg.0=char *,s
func.vsnprintf.arg.1=size_t,size
func.vsnprintf.arg.2=const char *,format
func.vsnprintf.arg.3=va_list,arg
func.vsnprintf.args=4
func.vsnprintf.ret=int
func.vsprintf.arg.0=char *,s
func.vsprintf.arg.1=const char *,format
func.vsprintf.arg.2=va_list,arg
func.vsprintf.args=3
func.vsprintf.ret=int
func.vsscanf.arg.0=const char *,s
func.vsscanf.arg.1=const char *,format
func.vsscanf.arg.2=va_list,arg
func.vsscanf.args=3
func.vsscanf.ret=int
func.vswprintf.arg.0=wchar_t *,s
func.vswprintf.arg.1=size_t,n
func.vswprintf.arg.2=const wchar_t *,format
func.vswprintf.arg.3=va_list,arg
func.vswprintf.args=4
func.vswprintf.ret=int
func.vswscanf.arg.0=const wchar_t *,s
func.vswscanf.arg.1=const wchar_t *,format
func.vswscanf.arg.2=va_list,arg
func.vswscanf.args=3
func.vswscanf.ret=int
func.vwprintf.arg.0=const wchar_t *,format
func.vwprintf.arg.1=va_list,arg
func.vwprintf.args=2
func.vwprintf.ret=int
func.vwscanf.arg.0=const wchar_t *,format
func.vwscanf.arg.1=va_list,arg
func.vwscanf.args=2
func.vwscanf.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=1
func.wait.ret=pid_t
func.waitid.arg.0=idtype_t,idtype
func.waitid.arg.1=id_t,id
func.waitid.arg.2=siginfo_t *,infop
func.waitid.arg.3=int,options
func.waitid.args=4
func.waitid.ret=int
func.waitpid.arg.0=pid_t,pid
func.waitpid.arg.1=int *,wstatus
func.waitpid.arg.2=int,options
func.waitpid.args=3
func.waitpid.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=1
func.warn.ret=void
func.warnc.arg.0=const char *,format
func.warnc.arg.1=int,opt
func.warnc.args=2
func.warnc.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=1
func.warnx.ret=void
func.wcrtomb.arg.0=char *,s
func.wcrtomb.arg.1=wchar_t,wc
func.wcrtomb.arg.2=mbstate_t *,ps
func.wcrtomb.args=3
func.wcrtomb.ret=size_t
func.wcscat.arg.0=wchar_t *,s1
func.wcscat.arg.1=const wchar_t *,s2
func.wcscat.args=2
func.wcscat.ret=wchar_t*
func.wcschr.arg.0=wchar_t *,s
func.wcschr.arg.1=wchar_t,c
func.wcschr.args=2
func.wcschr.ret=wchar_t*
func.wcscmp.arg.0=const wchar_t *,s1
func.wcscmp.arg.1=const wchar_t *,s2
func.wcscmp.args=2
func.wcscmp.ret=int
func.wcscoll.arg.0=const wchar_t *,s1
func.wcscoll.arg.1=const wchar_t *,s2
func.wcscoll.args=2
func.wcscoll.ret=int
func.wcscpy.arg.0=wchar_t *,s1
func.wcscpy.arg.1=const wchar_t *,s2
func.wcscpy.args=2
func.wcscpy.ret=wchar_t*
func.wcscspn.arg.0=const wchar_t *,s1
func.wcscspn.arg.1=const wchar_t *,s2
func.wcscspn.args=2
func.wcscspn.ret=size_t
func.wcsftime.arg.0=wchar_t *,s
func.wcsftime.arg.1=size_t,maxsize
func.wcsftime.arg.2=const wchar_t *,format
func.wcsftime.arg.3=const tm *,timeptr
func.wcsftime.args=4
func.wcsftime.ret=size_t
func.wcslen.arg.0=const wchar_t *,s
func.wcslen.args=1
func.wcslen.ret=size_t
func.wcsncat.arg.0=wchar_t *,s1
func.wcsncat.arg.1=const wchar_t *,s2
func.wcsncat.arg.2=size_t,n
func.wcsncat.args=3
func.wcsncat.ret=wchar_t*
func.wcsncmp.arg.0=const wchar_t *,s1
func.wcsncmp.arg.1=const wchar_t *,s2
func.wcsncmp.arg.2=size_t,n
func.wcsncmp.args=3
func.wcsncmp.ret=int
func.wcsncpy.arg.0=wchar_t *,s1
func.wcsncpy.arg.1=const wchar_t *,s2
func.wcsncpy.arg.2=size_t,n
func.wcsncpy.args=3
func.wcsncpy.ret=wchar_t*
func.wcspbrk.arg.0=wchar_t *,s1
func.wcspbrk.arg.1=const wchar_t *,s2
func.wcspbrk.args=2
func.wcspbrk.ret=wchar_t*
func.wcsrchr.arg.0=wchar_t *,s
func.wcsrchr.arg.1=wchar_t,c
func.wcsrchr.args=2
func.wcsrchr.ret=wchar_t*
func.wcsrtombs.arg.0=char *,dst
func.wcsrtombs.arg.1=const wchar_t* *,src
func.wcsrtombs.arg.2=size_t,len
func.wcsrtombs.arg.3=mbstate_t *,ps
func.wcsrtombs.args=4
func.wcsrtombs.ret=size_t
func.wcsspn.arg.0=const wchar_t *,s1
func.wcsspn.arg.1=const wchar_t *,s2
func.wcsspn.args=2
func.wcsspn.ret=size_t
func.wcsstr.arg.0=wchar_t *,s1
func.wcsstr.arg.1=const wchar_t *,s2
func.wcsstr.args=2
func.wcsstr.ret=wchar_t*
func.wcstod.arg.0=const wchar_t *,nptr
func.wcstod.arg.1=wchar_t* *,endptr
func.wcstod.args=2
func.wcstod.ret=double
func.wcstof.arg.0=const wchar_t *,nptr
func.wcstof.arg.1=wchar_t* *,endptr
func.wcstof.args=2
func.wcstof.ret=float
func.wcstoimax.arg.0=const,wchar_t*
func.wcstoimax.arg.1=wchar_t* *,endptr
func.wcstoimax.arg.2=int,base
func.wcstoimax.args=3
func.wcstoimax.ret=intmax_t
func.wcstok.arg.0=wchar_t *,s1
func.wcstok.arg.1=const wchar_t *,s2
func.wcstok.arg.2=wchar_t* *,ptr
func.wcstok.args=3
func.wcstok.ret=wchar_t*
func.wcstol.arg.0=const wchar_t *,nptr
func.wcstol.arg.1=wchar_t* *,endptr
func.wcstol.arg.2=int,base
func.wcstol.args=3
func.wcstol.ret=long
func.wcstold.arg.0=const wchar_t *,nptr
func.wcstold.arg.1=wchar_t* *,endptr
func.wcstold.args=2
func.wcstold.ret=long double
func.wcstoll.arg.0=const wchar_t *,nptr
func.wcstoll.arg.1=wchar_t* *,endptr
func.wcstoll.arg.2=int,base
func.wcstoll.args=3
func.wcstoll.ret=long long
func.wcstombs.arg.0=char *,s
func.wcstombs.arg.1=const wchar_t *,pwcs
func.wcstombs.arg.2=size_t,n
func.wcstombs.args=3
func.wcstombs.ret=size_t
func.wcstoul.arg.0=const wchar_t *,nptr
func.wcstoul.arg.1=wchar_t* *,endptr
func.wcstoul.arg.2=int,base
func.wcstoul.args=3
func.wcstoul.ret=long
func.wcstoull.arg.0=const wchar_t *,nptr
func.wcstoull.arg.1=wchar_t* *,endptr
func.wcstoull.arg.2=int,base
func.wcstoull.args=3
func.wcstoull.ret=long long
func.wcstoumax.arg.0=const,wchar_t*
func.wcstoumax.arg.1=wchar_t* *,endptr
func.wcstoumax.arg.2=int,base
func.wcstoumax.args=3
func.wcstoumax.ret=uintmax_t
func.wcsxfrm.arg.0=wchar_t *,s1
func.wcsxfrm.arg.1=const wchar_t *,s2
func.wcsxfrm.arg.2=size_t,n
func.wcsxfrm.args=3
func.wcsxfrm.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=1
func.wctob.ret=int
func.wctomb.arg.0=char *,s
func.wctomb.arg.1=wchar_t,wchar
func.wctomb.args=2
func.wctomb.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=1
func.wctype.ret=wctype_t
func.wmemchr.arg.0=wchar_t *,s
func.wmemchr.arg.1=wchar_t,c
func.wmemchr.arg.2=size_t,n
func.wmemchr.args=3
func.wmemchr.ret=wchar_t*
func.wmemcmp.arg.0=wchar_t *,s1
func.wmemcmp.arg.1=const wchar_t *,s2
func.wmemcmp.arg.2=size_t,n
func.wmemcmp.args=3
func.wmemcmp.ret=int
func.wmemcpy.arg.0=wchar_t *,s1
func.wmemcpy.arg.1=const wchar_t *,s2
func.wmemcpy.arg.2=size_t,n
func.wmemcpy.args=3
func.wmemcpy.ret=wchar_t*
func.wmemmove.arg.0=wchar_t *,s1
func.wmemmove.arg.1=const wchar_t *,s2
func.wmemmove.arg.2=size_t,n
func.wmemmove.args=3
func.wmemmove.ret=wchar_t*
func.wmemset.arg.0=wchar_t *,s
func.wmemset.arg.1=wchar_t,c
func.wmemset.arg.2=size_t,n
func.wmemset.args=3
func.wmemset.ret=wchar_t*
func.wprintf.arg.0=const wchar_t *,format
func.wprintf.args=1
func.wprintf.ret=int
func.write.arg.0=int,fd
func.write.arg.1=const char *,ptr
func.write.arg.2=size_t,nbytes
func.write.args=3
func.write.ret=ssize_t
func.wscanf.arg.0=const wchar_t *,format
func.wscanf.args=1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=1
func.xmalloc.ret= void *
fwide=func
fwprintf=func
fwrite=func
fwscanf=func
getc=func
getchar=func
getenv=func
geteuid=func
getopt=func
getpid=func
getprogname=func
gets=func
getsockname=func
getsockopt=func
getuid=func
getwc=func
getwchar=func
gid_t=type
gmtime=func
group_from_gid=func
humanize_number=func
hypot=func
hypotf=func
hypotl=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
imaxdiv=func
inet_aton=func
inet_ntoa=func
initstate=func
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
ioctl=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isgreater=func
isgreaterequal=func
isinf=func
isless=func
islessequal=func
islessgreater=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isunordered=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswctype=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
kill=func
labs=func
ldexp=func
ldexpf=func
ldexpl=func
ldiv=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
lldiv=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
long=type
long long=type
longjmp=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
lstat=func
main=func
malloc=func
maskrune=func
mblen=func
mbrlen=func
mbrtowc=func
mbsinit=func
mbsrtowcs=func
mbstowcs=func
mbtowc=func
memchr=func
memcmp=func
memcpy=func
memmem=func
memmove=func
memset=func
mkstemp=func
mktemp=func
mktime=func
mmap=func
modf=func
modff=func
modfl=func
munmap=func
nan=func
nanf=func
nanl=func
nanosleep=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nextafter=func
nextafterf=func
nextafterl=func
nexttoward=func
nexttowardf=func
nexttowardl=func
nl_langinfo=func
nl_langinfo_l=func
objc_enumerationMutation=func
objc_msgSend=func
objc_msgSendSuper2=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
objc_storeStrong=func
open=func
openat=func
pclose=func
perror=func
pid_t=type
popen=func
pow=func
powf=func
powl=func
prctl=func
printf=func
ptrace=func
putc=func
putchar=func
puts=func
pututxline=func
putwc=func
putwchar=func
qsort=func
quick_exit=func
raise=func
rand=func
random=func
read=func
realloc=func
reallocf=func
recv=func
remainder=func
remainderf=func
remainderl=func
remove=func
remquo=func
remquof=func
remquol=func
rename=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scalbln=func
scalblnf=func
scalblnl=func
scalbn=func
scalbnf=func
scalbnl=func
scanf=func
select=func
send=func
setbuf=func
setenv=func
setjmp=func
setlocale=func
setsockopt=func
setstate=func
setvbuf=func
short=type
sigaction=func
signal=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
size_t=type
sleep=func
snprintf=func
snprintf_chk=func
socket=func
sprintf=func
sprintf_chk=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
sscanf=func
strcasecmp=func
strcat=func
strchr=func
strcmp=func
strcoll=func
strcpy=func
strcpy_chk=func
strcspn=func
strdup=func
strerror=func
strftime=func
strlcpy=func
strlen=func
strmode=func
strncasecmp=func
strncat=func
strncmp=func
strncpy=func
strndup=func
strpbrk=func
strrchr=func
strspn=func
strstr=func
strtod=func
strtof=func
strtoimax=func
strtok=func
strtol=func
strtold=func
strtoll=func
strtoul=func
strtoull=func
strtoumax=func
strxfrm=func
swprintf=func
swscanf=func
symlink=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
tgoto=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towctrans=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
type.char=c
type.char *=z
type.char *.size=32
type.char.size=8
type.double=F
type.double.size=64
type.float=f
type.float.size=32
type.gid_t=d
type.gid_t.uid=32
type.int=d
type.int.size=32
type.int16_t=w
type.int16_t.size=16
type.int32_t=d
type.int32_t.size=32
type.int64_t=q
type.int64_t.size=64
type.int8_t=b
type.int8_t.size=8
type.long=x
type.long long=q
type.long long.size=64
type.long.size=64
type.pid_t=d
type.pid_t.pid=32
type.short=w
type.short.size=16
type.size_t=d
type.size_t.size=32
type.uid_t=d
type.uid_t.size=64
type.uid_t.uid=32
type.uint16_t=w
type.uint16_t.size=16
type.uint32_t=d
type.uint32_t.size=32
type.uint64_t=q
type.uint64_t.size=64
type.uint8_t=b
type.uint8_t.size=8
type.unsigned char=b
type.unsigned char.size=8
type.unsigned int=i
type.unsigned int.size=32
type.unsigned short=w
type.unsigned short.size=16
type.void *=p
type.void *.size=32
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
umask=func
ungetc=func
ungetwc=func
unlink=func
unsigned char=type
unsigned int=type
unsigned short=type
user_from_uid=func
usleep=func
vfprintf=func
vfscanf=func
vfwprintf=func
vfwscanf=func
void *=type
vprintf=func
vscanf=func
vsnprintf=func
vsprintf=func
vsscanf=func
vswprintf=func
vswscanf=func
vwprintf=func
vwscanf=func
wait=func
waitid=func
waitpid=func
warn=func
warnc=func
warnx=func
wcrtomb=func
wcscat=func
wcschr=func
wcscmp=func
wcscoll=func
wcscpy=func
wcscspn=func
wcsftime=func
wcslen=func
wcsncat=func
wcsncmp=func
wcsncpy=func
wcspbrk=func
wcsrchr=func
wcsrtombs=func
wcsspn=func
wcsstr=func
wcstod=func
wcstof=func
wcstoimax=func
wcstok=func
wcstol=func
wcstold=func
wcstoll=func
wcstombs=func
wcstoul=func
wcstoull=func
wcstoumax=func
wcsxfrm=func
wctob=func
wctomb=func
wctrans=func
wctype=func
wmemchr=func
wmemcmp=func
wmemcpy=func
wmemmove=func
wmemset=func
wprintf=func
write=func
wscanf=func
xmalloc=func

/core/analysis/xrefs
0x8048000=[{"to":134512711,"type":"c"}]
0x80480dd=[{"to":134513000,"type":"d"}]
0x80481d2=[{"to":134513044,"type":"c"}]
0x80481f8=[{"to":134513146,"type":"c"}]
0x8048432=[{"to":134513828,"type":"c"}]
0x8048443=[{"to":134513849,"type":"c"}]
0x8048446=[{"to":134513852,"type":"c"}]
0x804844d=[{"to":134513838,"type":"c"}]
0x804845a=[{"to":134513871,"type":"c"}]
0x804845c=[{"to":134513759,"type":"c"}]
0x8048476=[{"to":134513898,"type":"c"}]
0x8048480=[{"to":134513911,"type":"c"}]
0x8048482=[{"to":134513900,"type":"c"}]
0x804848a=[{"to":134513900,"type":"c"}]
0x804848d=[{"to":134513808,"type":"c"}]
0x8048494=[{"to":134513915,"type":"c"}]
0x8048496=[{"to":134513911,"type":"c"}]
0x804849b=[{"to":134513822,"type":"c"}]
0x80484a2=[{"to":134513929,"type":"c"}]
0x80484ae=[{"to":134513840,"type":"c"}]
0x80484b4=[{"to":134513948,"type":"c"}]
0x80484c2=[{"to":134513861,"type":"c"}]
0x80484cd=[{"to":134513972,"type":"c"}]
0x80484f1=[{"to":134514018,"type":"c"}]
0x80484fa=[{"to":134514032,"type":"c"}]
0x8048519=[{"to":134514046,"type":"c"}]
0x8048521=[{"to":134514070,"type":"c"}]
0x804852b=[{"to":134514081,"type":"c"}]
0x8048542=[{"to":134514104,"type":"c"}]
0x8048548=[{"to":134514093,"type":"c"}]
0x804854f=[{"to":134514101,"type":"c"}]
0x8048552=[{"to":134514120,"type":"c"}]
0x8048559=[{"to":134514112,"type":"c"}]
0x8048561=[{"to":134514120,"type":"c"}]
0x804856c=[{"to":134514151,"type":"c"}]
0x804856e=[{"to":134514148,"type":"c"}]
0x8048575=[{"to":134514157,"type":"c"}]
0x8048585=[{"to":134514171,"type":"c"}]
0x8048640=[{"to":134514243,"type":"c"}]
0x8048660=[{"to":134514275,"type":"c"}]
0x80486a0=[{"to":134514339,"type":"c"}]
0x80487c8=[{"to":134514554,"type":"c"}]
0x80487d0=[{"to":134514562,"type":"c"}]
0x80487e4=[{"to":134514665,"type":"C"}]
0x80487f8=[{"to":134514687,"type":"c"}]
0x80487fa=[{"to":134514800,"type":"C"}]
0x80487ff=[{"to":134515376,"type":"C"}]
0x8048804=[{"to":134517280,"type":"C"}]
0x8048810=[{"to":134524920,"type":"d"}]
0x8048816=[{"to":134524924,"type":"c"}]
0x8048820=[{"to":134524928,"type":"c"}]
0x804882b=[{"to":134514704,"type":"c"}]
0x8048830=[{"to":134524932,"type":"c"}]
0x804883b=[{"to":134514704,"type":"c"}]
0x8048840=[{"to":134524936,"type":"c"}]
0x804884b=[{"to":134514704,"type":"c"}]
0x8048850=[{"to":134524940,"type":"c"}]
0x804885b=[{"to":134514704,"type":"c"}]
0x8048860=[{"to":134524944,"type":"c"}]
0x804886b=[{"to":134514704,"type":"c"}]
0x8048870=[{"to":134524948,"type":"c"}]
0x804887b=[{"to":134514704,"type":"c"}]
0x8048880=[{"to":134524952,"type":"c"}]
0x804888b=[{"to":134514704,"type":"c"}]
0x8048890=[{"to":134524956,"type":"c"}]
0x804889b=[{"to":134514704,"type":"c"}]
0x80488a0=[{"to":134524960,"type":"c"}]
0x80488ab=[{"to":134514704,"type":"c"}]
0x80488b0=[{"to":134524964,"type":"c"}]
0x80488bb=[{"to":134514704,"type":"c"}]
0x80488c0=[{"to":134524968,"type":"c"}]
0x80488cb=[{"to":134514704,"type":"c"}]
0x80488d0=[{"to":134524972,"type":"c"}]
0x80488db=[{"to":134514704,"type":"c"}]
0x80488e0=[{"to":134524976,"type":"c"}]
0x80488eb=[{"to":134514704,"type":"c"}]
0x80488f0=[{"to":134524980,"type":"c"}]
0x80488fb=[{"to":134514704,"type":"c"}]
0x8048900=[{"to":134524984,"type":"c"}]
0x804890b=[{"to":134514704,"type":"c"}]
0x8048910=[{"to":134524988,"type":"c"}]
0x804891b=[{"to":134514704,"type":"c"}]
0x8048920=[{"to":134524992,"type":"c"}]
0x804892b=[{"to":134514704,"type":"c"}]
0x8048930=[{"to":134524996,"type":"c"}]
0x804893b=[{"to":134514704,"type":"c"}]
0x8048940=[{"to":134525000,"type":"c"}]
0x804894b=[{"to":134514704,"type":"c"}]
0x8048950=[{"to":134525004,"type":"c"}]
0x804895b=[{"to":134514704,"type":"c"}]
0x8048960=[{"to":134525008,"type":"c"}]
0x804896b=[{"to":134514704,"type":"c"}]
0x8048970=[{"to":134525012,"type":"c"}]
0x804897b=[{"to":134514704,"type":"c"}]
0x8048980=[{"to":134525016,"type":"c"}]
0x804898b=[{"to":134514704,"type":"c"}]
0x8048990=[{"to":134525020,"type":"c"}]
0x804899b=[{"to":134514704,"type":"c"}]
0x80489a0=[{"to":134525024,"type":"c"}]
0x80489ab=[{"to":134514704,"type":"c"}]
0x80489b0=[{"to":134525028,"type":"c"}]
0x80489bb=[{"to":134514704,"type":"c"}]
0x80489c0=[{"to":134525032,"type":"c"}]
0x80489cb=[{"to":134514704,"type":"c"}]
0x80489d0=[{"to":134525036,"type":"c"}]
0x80489db=[{"to":134514704,"type":"c"}]
0x80489e0=[{"to":134525040,"type":"c"}]
0x80489eb=[{"to":134514704,"type":"c"}]
0x80489f0=[{"to":134525044,"type":"c"}]
0x80489fb=[{"to":134514704,"type":"c"}]
0x8048a00=[{"to":134525048,"type":"c"}]
0x8048a0b=[{"to":134514704,"type":"c"}]
0x8048a10=[{"to":134525052,"type":"c"}]
0x8048a1b=[{"to":134514704,"type":"c"}]
0x8048a2b=[{"to":134517264,"type":"d"}]
0x8048a30=[{"to":134517152,"type":"d"}]
0x8048a37=[{"to":134516879,"type":"d"}]
0x8048a3c=[{"to":134514880,"type":"C"}]
0x8048a57=[{"to":134525124,"type":"d"}]
0x8048a5e=[{"to":134515359,"type":"c"}]
0x8048a60=[{"to":134525128,"type":"d"}]
0x8048a65=[{"to":134524688,"type":"d"}]
0x8048a6a=[{"to":134524684,"type":"d"}]
0x8048a78=[{"to":134515352,"type":"c"}]
0x8048a83=[{"to":134525128,"type":"d"}]
0x8048a88=[{"to":134524684,"type":"C"}]
0x8048a8f=[{"to":134525128,"type":"d"}]
0x8048a96=[{"to":134515328,"type":"c"}]
0x8048a98=[{"to":134525124,"type":"d"}]
0x8048ab6=[{"to":134524692,"type":"d"}]
0x8048abd=[{"to":134515409,"type":"c"}]
0x8048ac6=[{"to":134515409,"type":"c"}]
0x8048ac8=[{"to":134524692,"type":"d"}]
0x8048b13=[{"to":134515216,"type":"C"}]
0x8048b3f=[{"to":134515072,"type":"C"}]
0x8048b58=[{"to":134517360,"type":"d"}]
0x8048b67=[{"to":134514784,"type":"C"}]
0x8048b6f=[{"to":134514928,"type":"C"}]
0x8048b77=[{"to":134515152,"type":"C"}]
0x8048b8d=[{"to":134514864,"type":"C"}]
0x8048ba2=[{"to":134514912,"type":"C"}]
0x8048bb8=[{"to":134514832,"type":"C"}]
0x8048bed=[{"to":134514992,"type":"C"}]
0x8048c10=[{"to":134515024,"type":"C"}]
0x8048c1b=[{"to":134514896,"type":"C"}]
0x8048c26=[{"to":134514960,"type":"C"}]
0x8048c74=[{"to":134515855,"type":"c"}]
0x8048c84=[{"to":134515855,"type":"c"}]
0x8048c8d=[{"to":134515878,"type":"c"}]
0x8048c9d=[{"to":134515878,"type":"c"}]
0x8048ce2=[{"to":134515766,"type":"C"}]
0x8048d10=[{"to":134517362,"type":"d"}]
0x8048d22=[{"to":134514784,"type":"C"}]
0x8048d2a=[{"to":134514928,"type":"C"}]
0x8048d32=[{"to":134515152,"type":"C"}]
0x8048d48=[{"to":134514864,"type":"C"}]
0x8048d5d=[{"to":134514912,"type":"C"}]
0x8048d73=[{"to":134514832,"type":"C"}]
0x8048da8=[{"to":134515120,"type":"C"}]
0x8048dbf=[{"to":134514896,"type":"C"}]
0x8048dca=[{"to":134514960,"type":"C"}]
0x8048dfc=[{"to":134515072,"type":"C"}]
0x8048e0a=[{"to":134514720,"type":"C"}]
0x8048e0f=[{"to":134516326,"type":"c"}]
0x8048e18=[{"to":134516281,"type":"c"}]
0x8048e32=[{"to":134514768,"type":"C"}]
0x8048e37=[{"to":134516309,"type":"c"}]
0x8048e50=[{"to":134514768,"type":"C"}]
0x8048e6a=[{"to":134516241,"type":"c"}]
0x8048e79=[{"to":134514976,"type":"C"}]
0x8048e85=[{"to":134516412,"type":"c"}]
0x8048e93=[{"to":134517364,"type":"d"}]
0x8048eb3=[{"to":134515184,"type":"C"}]
0x8048ec0=[{"to":134516359,"type":"c"}]
0x8048ecf=[{"to":134516438,"type":"c"}]
0x8048ed1=[{"to":134515088,"type":"C"}]
0x8048efe=[{"to":134516502,"type":"c"}]
0x8048f0b=[{"to":134515168,"type":"C"}]
0x8048f1a=[{"to":134516480,"type":"c"}]
0x8048f85=[{"to":134516620,"type":"c"}]
0x8048f87=[{"to":134515088,"type":"C"}]
0x8048fc1=[{"to":134514752,"type":"C"}]
0x8048fc9=[{"to":134516673,"type":"c"}]
0x8048fcb=[{"to":134525152,"type":"d"}]
0x8048fe0=[{"to":134525088,"type":"d"}]
0x8048ff1=[{"to":134525152,"type":"d"}]
0x8048ff8=[{"to":134514848,"type":"C"}]
0x804901f=[{"to":134525152,"type":"d"}]
0x8049026=[{"to":134515925,"type":"C"}]
0x8049044=[{"to":134516184,"type":"C"}]
0x804904f=[{"to":134517369,"type":"d"}]
0x8049061=[{"to":134515008,"type":"C"}]
0x804906f=[{"to":134514944,"type":"C"}]
0x804907e=[{"to":134516869,"type":"c"}]
0x8049080=[{"to":134515088,"type":"C"}]
0x8049098=[{"to":134525120,"type":"d"}]
0x80490b8=[{"to":134515056,"type":"C"}]
0x80490bd=[{"to":134525088,"type":"d"}]
0x80490dd=[{"to":134515056,"type":"C"}]
0x80490e2=[{"to":134517388,"type":"d"}]
0x80490e9=[{"to":134515136,"type":"C"}]
0x80490f5=[{"to":134515040,"type":"C"}]
0x80490fd=[{"to":134514736,"type":"C"}]
0x8049102=[{"to":134516440,"type":"C"}]
0x804910b=[{"to":134517436,"type":"d"}]
0x804911b=[{"to":134515008,"type":"C"}]
0x8049120=[{"to":134517471,"type":"d"}]
0x8049130=[{"to":134515104,"type":"C"}]
0x804913d=[{"to":134517079,"type":"c"}]
0x804913f=[{"to":134517474,"type":"d"}]
0x8049146=[{"to":134515136,"type":"C"}]
0x8049152=[{"to":134515200,"type":"C"}]
0x8049157=[{"to":134517492,"type":"d"}]
0x804915e=[{"to":134515136,"type":"C"}]
0x8049163=[{"to":134517524,"type":"d"}]
0x804916a=[{"to":134515136,"type":"C"}]
0x804916f=[{"to":134516626,"type":"C"}]
0x8049174=[{"to":134517568,"type":"d"}]
0x804917b=[{"to":134515136,"type":"C"}]
0x8049180=[{"to":134517601,"type":"d"}]
0x8049187=[{"to":134514816,"type":"C"}]
0x80491a4=[{"to":134517266,"type":"C"}]
0x80491bc=[{"to":134514656,"type":"C"}]
0x80491ce=[{"to":134517241,"type":"c"}]
0x80491f7=[{"to":134517208,"type":"c"}]
0x8049201=[{"to":134517264,"type":"c"}]
0x8049227=[{"to":134524676,"type":"d"}]
0x804922f=[{"to":134517316,"type":"c"}]
0x8049231=[{"to":134524676,"type":"d"}]
0x8049242=[{"to":134517304,"type":"c"}]
0x8049250=[{"to":134517333,"type":"C"}]
0x804925c=[{"to":134515280,"type":"C"}]
0x8049270=[{"to":134517362,"type":"c"}]
0x8049272=[{"to":134517364,"type":"c"}]
0x8049299=[{"to":134517507,"type":"c"}]
0x80492ad=[{"to":134517528,"type":"c"}]
0x80492b4=[{"to":134517548,"type":"c"}]
0x80492bd=[{"to":134517540,"type":"c"}]
0x80492c2=[{"to":134517476,"type":"c"}]
0x80492cd=[{"to":134517572,"type":"c"}]
0x80492cf=[{"to":134517489,"type":"c"}]
0x80492d4=[{"to":134517561,"type":"c"}]
0x80492ea=[{"to":134517600,"type":"c"}]
0x80492fd=[{"to":134517614,"type":"c"}]
0x80492ff=[{"to":134517537,"type":"c"}]
0x8049302=[{"to":134517609,"type":"c"}]
0x8049307=[{"to":134517617,"type":"c"}]
0x804930b=[{"to":134517622,"type":"c"}]
0x804931d=[{"to":134517649,"type":"c"}]
0x8049327=[{"to":134517649,"type":"c"}]
0x8049331=[{"to":134517659,"type":"c"}]
0x8049338=[{"to":134517678,"type":"c"}]
0x8049346=[{"to":134517687,"type":"c"}]
0x8049348=[{"to":134517610,"type":"c"}]
0x804934c=[{"to":134517614,"type":"c"}]
0x804934e=[{"to":134517699,"type":"c"}]
0x804935a=[{"to":134517714,"type":"c"}]
0x8049369=[{"to":134517712,"type":"c"}]
0x80493d8=[{"to":134517723,"type":"c"}]
0x8049401=[{"to":134517771,"type":"c"}]
0x8049425=[{"to":134517803,"type":"c"}]
0x8049427=[{"to":134517801,"type":"c"}]
0x8049514=[{"to":134518033,"type":"c"}]
0x804956c=[{"to":134518127,"type":"c"}]

/core/analysis/zigns

/core/analysis/zigns/spaces
name=zs
spacestack=["*"]

/core/analysis/zigns/spaces/spaces

/core/config
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.endsize=true
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vars.stackname=false
analysis.verbose=false
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=32
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=35
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=1
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.arm=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=1
asm.tabs.off=5
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
bin.at=false
bin.b64str=false
bin.baddr=0x08048000
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.rawstr=false
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.useldr=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=vi
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.json.num=none
cfg.json.str=none
cfg.newshell=true
cfg.newshell.autocompletion=false
cfg.newtab=false
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid8220
cfg.wseek=false
cmd.demangle=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsize=1
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.demangle=false
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=false
dbg.hwbp=0
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=0
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=1
dbg.verbose=true
diff.bare=false
diff.from=0
diff.levenstein=false
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/home/iota
dir.magic=/tmp/.mount_CutterFbI7aL/usr/share/rizin/0.2.1/magic
dir.plugins=/tmp/.mount_CutterFbI7aL/usr/share/rizin/plugins
dir.prefix=/tmp/.mount_CutterFbI7aL/usr
dir.projects=~/.local/share/rizin/projects
dir.types=/usr/include
dir.zigns=~/.local/share/rizin/zigns
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=0
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/home/iota/Desktop/23_md5_calculator/hash
file.loadalign=0x00000400
file.openmany=1
file.path=/home/iota/Desktop/23_md5_calculator/hash
file.type=elf
ghidra.cmt.cpp=true
ghidra.cmt.indent=4
ghidra.indent=4
ghidra.linelen=120
ghidra.maximplref=2
ghidra.nl.brace=false
ghidra.nl.else=false
ghidra.rawptr=true
ghidra.sleighhome=/tmp/.mount_CutterFbI7aL/usr/share/rizin/plugins/rz_ghidra_sleigh
ghidra.verbose=true
graph.aeab=false
graph.body=true
graph.bubble=false
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=0
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dietime=0
http.dirlist=false
http.homeroot=~/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxport=9999
http.maxsize=0
http.port=9090
http.root=/tmp/.mount_CutterFbI7aL/usr/share/rizin/0.2.1/www
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=0
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=0
io.pcache.read=0
io.pcache.write=0
io.unalloc=false
io.unalloc.ch=.
io.va=1
jsdec.asm=false
jsdec.blocks=false
jsdec.casts=false
jsdec.debug=false
jsdec.highlight=default
jsdec.paddr=false
jsdec.slow=false
jsdec.theme=default
jsdec.xrefs=false
log.colors=false
log.events=false
log.level=4
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/home/iota/.local/share/rizin/pdb
pdb.useragent=Microsoft-Symbol-Server/6.11.0001.402
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.fps=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=0
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zign.autoload=false
zign.diff.bthresh=1.0
zign.diff.gthresh=1.0
zign.match.bytes=true
zign.match.graph=true
zign.match.hash=true
zign.match.offset=false
zign.match.refs=true
zign.match.types=false
zign.maxsz=500
zign.mincc=10
zign.minsz=16
zign.prefix=sign
zign.threshold=0.0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/file
absolute=/home/iota/Desktop/23_md5_calculator/hash
raw=/home/iota/Desktop/23_md5_calculator/hash
relative=hash

/core/flags
base=0
realnames=1

/core/flags/flags
entry0={"realname":"entry0","demangled":false,"offset":134515232,"size":33,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":134525064,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":134525056,"size":0,"space":"symbols"}
loc.__init_array_end={"realname":"__init_array_end","demangled":false,"offset":134524676,"size":0,"space":"symbols"}
loc.__init_array_start={"realname":"__init_array_start","demangled":false,"offset":134524676,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":134525064,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":134526176,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":134525056,"size":0,"space":"symbols"}
loc.imp._Jv_RegisterClasses={"realname":"_Jv_RegisterClasses","demangled":false,"offset":0,"size":16,"space":"imports"}
loc.imp.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":134514800,"size":6,"space":"imports"}
main={"realname":"main","demangled":false,"offset":134516879,"size":260,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":134524696,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":134524916,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":134517356,"size":4,"space":"symbols"}
obj.__CTOR_END={"realname":"__CTOR_END__","demangled":false,"offset":134524680,"size":0,"space":"symbols"}
obj.__CTOR_LIST={"realname":"__CTOR_LIST__","demangled":false,"offset":134524676,"size":0,"space":"symbols"}
obj.__DTOR_END={"realname":"__DTOR_END__","demangled":false,"offset":134524688,"size":0,"space":"symbols"}
obj.__DTOR_LIST={"realname":"__DTOR_LIST__","demangled":false,"offset":134524684,"size":0,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":134518160,"size":0,"space":"symbols"}
obj.__JCR_END={"realname":"__JCR_END__","demangled":false,"offset":134524692,"size":0,"space":"symbols"}
obj.__JCR_LIST={"realname":"__JCR_LIST__","demangled":false,"offset":134524692,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":134525060,"size":0,"space":"symbols"}
obj._fp_hw={"realname":"_fp_hw","demangled":false,"offset":134517352,"size":4,"space":"symbols"}
obj.completed.6159={"realname":"completed.6159","demangled":false,"offset":134525124,"size":1,"space":"symbols"}
obj.dtor_idx.6161={"realname":"dtor_idx.6161","demangled":false,"offset":134525128,"size":4,"space":"symbols"}
obj.g_buf={"realname":"g_buf","demangled":false,"offset":134525152,"size":1024,"space":"symbols"}
obj.stdin={"realname":"stdin","demangled":false,"offset":134525088,"size":4,"space":"symbols"}
obj.stdin__GLIBC_2.0={"realname":"stdin@@GLIBC_2.0","demangled":false,"offset":134525088,"size":4,"space":"symbols"}
obj.stdout={"realname":"stdout","demangled":false,"offset":134525120,"size":4,"space":"symbols"}
obj.stdout__GLIBC_2.0={"realname":"stdout@@GLIBC_2.0","demangled":false,"offset":134525120,"size":4,"space":"symbols"}
reloc.BIO_ctrl={"realname":"reloc.BIO_ctrl","demangled":false,"offset":134525004,"size":4,"space":"relocs"}
reloc.BIO_f_base64={"realname":"reloc.BIO_f_base64","demangled":false,"offset":134524980,"size":4,"space":"relocs"}
reloc.BIO_free_all={"realname":"reloc.BIO_free_all","demangled":false,"offset":134524972,"size":4,"space":"relocs"}
reloc.BIO_new={"realname":"reloc.BIO_new","demangled":false,"offset":134525036,"size":4,"space":"relocs"}
reloc.BIO_new_fp={"realname":"reloc.BIO_new_fp","demangled":false,"offset":134524964,"size":4,"space":"relocs"}
reloc.BIO_push={"realname":"reloc.BIO_push","demangled":false,"offset":134524976,"size":4,"space":"relocs"}
reloc.BIO_read={"realname":"reloc.BIO_read","demangled":false,"offset":134525028,"size":4,"space":"relocs"}
reloc.BIO_set_flags={"realname":"reloc.BIO_set_flags","demangled":false,"offset":134524956,"size":4,"space":"relocs"}
reloc.BIO_write={"realname":"reloc.BIO_write","demangled":false,"offset":134524996,"size":4,"space":"relocs"}
reloc.MD5_Final={"realname":"reloc.MD5_Final","demangled":false,"offset":134524992,"size":4,"space":"relocs"}
reloc.MD5_Init={"realname":"reloc.MD5_Init","demangled":false,"offset":134524928,"size":4,"space":"relocs"}
reloc.MD5_Update={"realname":"reloc.MD5_Update","demangled":false,"offset":134524940,"size":4,"space":"relocs"}
reloc.__gmon_start={"realname":"reloc.__gmon_start","demangled":false,"offset":134524948,"size":4,"space":"relocs"}
reloc.__isoc99_scanf={"realname":"reloc.__isoc99_scanf","demangled":false,"offset":134525024,"size":4,"space":"relocs"}
reloc.__libc_start_main={"realname":"reloc.__libc_start_main","demangled":false,"offset":134524968,"size":4,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"reloc.__stack_chk_fail","demangled":false,"offset":134525020,"size":4,"space":"relocs"}
reloc.ceil={"realname":"reloc.ceil","demangled":false,"offset":134525052,"size":4,"space":"relocs"}
reloc.exit={"realname":"reloc.exit","demangled":false,"offset":134525048,"size":4,"space":"relocs"}
reloc.fclose={"realname":"reloc.fclose","demangled":false,"offset":134524988,"size":4,"space":"relocs"}
reloc.fgets={"realname":"reloc.fgets","demangled":false,"offset":134524960,"size":4,"space":"relocs"}
reloc.fmemopen={"realname":"reloc.fmemopen","demangled":false,"offset":134524944,"size":4,"space":"relocs"}
reloc.free={"realname":"reloc.free","demangled":false,"offset":134524984,"size":4,"space":"relocs"}
reloc.getchar={"realname":"reloc.getchar","demangled":false,"offset":134524936,"size":4,"space":"relocs"}
reloc.malloc={"realname":"reloc.malloc","demangled":false,"offset":134525016,"size":4,"space":"relocs"}
reloc.printf={"realname":"reloc.printf","demangled":false,"offset":134525000,"size":4,"space":"relocs"}
reloc.puts={"realname":"reloc.puts","demangled":false,"offset":134525032,"size":4,"space":"relocs"}
reloc.rand={"realname":"reloc.rand","demangled":false,"offset":134525040,"size":4,"space":"relocs"}
reloc.setvbuf={"realname":"reloc.setvbuf","demangled":false,"offset":134525012,"size":4,"space":"relocs"}
reloc.snprintf={"realname":"reloc.snprintf","demangled":false,"offset":134525044,"size":4,"space":"relocs"}
reloc.srand={"realname":"reloc.srand","demangled":false,"offset":134524932,"size":4,"space":"relocs"}
reloc.stdin={"realname":"reloc.stdin","demangled":false,"offset":134525088,"size":4,"space":"relocs"}
reloc.stdout={"realname":"reloc.stdout","demangled":false,"offset":134525120,"size":4,"space":"relocs"}
reloc.system={"realname":"reloc.system","demangled":false,"offset":134524952,"size":4,"space":"relocs"}
reloc.time={"realname":"reloc.time","demangled":false,"offset":134525008,"size":4,"space":"relocs"}
section.={"realname":"section.","demangled":false,"offset":0,"size":0,"space":"sections"}
section..bss={"realname":"section..bss","demangled":false,"offset":134525088,"size":1088,"space":"sections"}
section..comment={"realname":"section..comment","demangled":false,"offset":0,"size":42,"space":"sections"}
section..ctors={"realname":"section..ctors","demangled":false,"offset":134524676,"size":8,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":134525056,"size":8,"space":"sections"}
section..dtors={"realname":"section..dtors","demangled":false,"offset":134524684,"size":8,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":134524696,"size":216,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":134513704,"size":435,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":134513112,"size":592,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":134517748,"size":416,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":134517648,"size":100,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":134517324,"size":26,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":134513068,"size":44,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":134514140,"size":74,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":134514216,"size":160,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":134524912,"size":4,"space":"sections"}
section..got.plt={"realname":"section..got.plt","demangled":false,"offset":134524916,"size":140,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":134514656,"size":46,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":134512980,"size":19,"space":"sections"}
section..jcr={"realname":"section..jcr","demangled":false,"offset":134524692,"size":4,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":134513000,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":134513032,"size":36,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":134514704,"size":528,"space":"sections"}
section..rel.dyn={"realname":"section..rel.dyn","demangled":false,"offset":134514376,"size":24,"space":"sections"}
section..rel.plt={"realname":"section..rel.plt","demangled":false,"offset":134514400,"size":256,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":134517352,"size":296,"space":"sections"}
section..shstrtab={"realname":"section..shstrtab","demangled":false,"offset":0,"size":252,"space":"sections"}
section..strtab={"realname":"section..strtab","demangled":false,"offset":0,"size":1244,"space":"sections"}
section..symtab={"realname":"section..symtab","demangled":false,"offset":0,"size":1648,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":134515232,"size":2092,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":134524696,"size":216,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":134517648,"size":100,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":134524676,"size":252,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":134512980,"size":19,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":134512640,"size":5524,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":134524676,"size":1500,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":134513000,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":134512692,"size":288,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":134512640,"size":52,"space":"segments"}
str.02x={"realname":"str.02x","demangled":false,"offset":134517364,"size":5,"space":"strings"}
str.Are_you_human__input_captcha_:__d={"realname":"str.Are_you_human__input_captcha_:__d","demangled":false,"offset":134517436,"size":35,"space":"strings"}
str.Encode_your_data_with_BASE64_then_paste_me={"realname":"str.Encode_your_data_with_BASE64_then_paste_me","demangled":false,"offset":134517524,"size":44,"space":"strings"}
str.MD5_data__:__s={"realname":"str.MD5_data__:__s","demangled":false,"offset":134517369,"size":16,"space":"strings"}
str.Thank_you_for_using_our_service.={"realname":"str.Thank_you_for_using_our_service.","demangled":false,"offset":134517568,"size":33,"space":"strings"}
str.Welcome__you_are_authenticated.={"realname":"str.Welcome__you_are_authenticated.","demangled":false,"offset":134517492,"size":32,"space":"strings"}
str.Welcome_to_the_free_MD5_calculating_service={"realname":"str.Welcome_to_the_free_MD5_calculating_service","demangled":false,"offset":134517388,"size":48,"space":"strings"}
str.echo__date_____log={"realname":"str.echo__date_____log","demangled":false,"offset":134517601,"size":19,"space":"strings"}
str.wrong_captcha={"realname":"str.wrong_captcha","demangled":false,"offset":134517474,"size":15,"space":"strings"}
sym..bss={"realname":".bss","demangled":false,"offset":134525088,"size":0,"space":"symbols.sections"}
sym..comment={"realname":".comment","demangled":false,"offset":0,"size":0,"space":"symbols.sections"}
sym..ctors={"realname":".ctors","demangled":false,"offset":134524676,"size":0,"space":"symbols.sections"}
sym..data={"realname":".data","demangled":false,"offset":134525056,"size":0,"space":"symbols.sections"}
sym..dtors={"realname":".dtors","demangled":false,"offset":134524684,"size":0,"space":"symbols.sections"}
sym..dynamic={"realname":".dynamic","demangled":false,"offset":134524696,"size":0,"space":"symbols.sections"}
sym..dynstr={"realname":".dynstr","demangled":false,"offset":134513704,"size":0,"space":"symbols.sections"}
sym..dynsym={"realname":".dynsym","demangled":false,"offset":134513112,"size":0,"space":"symbols.sections"}
sym..eh_frame={"realname":".eh_frame","demangled":false,"offset":134517748,"size":0,"space":"symbols.sections"}
sym..eh_frame_hdr={"realname":".eh_frame_hdr","demangled":false,"offset":134517648,"size":0,"space":"symbols.sections"}
sym..fini={"realname":".fini","demangled":false,"offset":134517324,"size":0,"space":"symbols.sections"}
sym..gnu.hash={"realname":".gnu.hash","demangled":false,"offset":134513068,"size":0,"space":"symbols.sections"}
sym..gnu.version={"realname":".gnu.version","demangled":false,"offset":134514140,"size":0,"space":"symbols.sections"}
sym..gnu.version_r={"realname":".gnu.version_r","demangled":false,"offset":134514216,"size":0,"space":"symbols.sections"}
sym..got={"realname":".got","demangled":false,"offset":134524912,"size":0,"space":"symbols.sections"}
sym..got.plt={"realname":".got.plt","demangled":false,"offset":134524916,"size":0,"space":"symbols.sections"}
sym..init={"realname":".init","demangled":false,"offset":134514656,"size":0,"space":"symbols.sections"}
sym..interp={"realname":".interp","demangled":false,"offset":134512980,"size":0,"space":"symbols.sections"}
sym..jcr={"realname":".jcr","demangled":false,"offset":134524692,"size":0,"space":"symbols.sections"}
sym..note.ABI_tag={"realname":".note.ABI-tag","demangled":false,"offset":134513000,"size":0,"space":"symbols.sections"}
sym..note.gnu.build_id={"realname":".note.gnu.build-id","demangled":false,"offset":134513032,"size":0,"space":"symbols.sections"}
sym..plt={"realname":".plt","demangled":false,"offset":134514704,"size":0,"space":"symbols.sections"}
sym..rel.dyn={"realname":".rel.dyn","demangled":false,"offset":134514376,"size":0,"space":"symbols.sections"}
sym..rel.plt={"realname":".rel.plt","demangled":false,"offset":134514400,"size":0,"space":"symbols.sections"}
sym..rodata={"realname":".rodata","demangled":false,"offset":134517352,"size":0,"space":"symbols.sections"}
sym..text={"realname":".text","demangled":false,"offset":134515232,"size":0,"space":"symbols.sections"}
sym.Base64Decode={"realname":"Base64Decode","demangled":false,"offset":134515925,"size":259,"space":"symbols"}
sym.Base64Encode={"realname":"Base64Encode","demangled":false,"offset":134515412,"size":354,"space":"symbols"}
sym.__do_global_ctors_aux={"realname":"__do_global_ctors_aux","demangled":false,"offset":134517280,"size":42,"space":"symbols"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":134515280,"size":85,"space":"symbols"}
sym.__i686.get_pc_thunk.bx={"realname":"__i686.get_pc_thunk.bx","demangled":false,"offset":134517266,"size":4,"space":"symbols"}
sym.__libc_csu_fini={"realname":"__libc_csu_fini","demangled":false,"offset":134517264,"size":2,"space":"symbols"}
sym.__libc_csu_init={"realname":"__libc_csu_init","demangled":false,"offset":134517152,"size":97,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":134517324,"size":26,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":134514656,"size":46,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":134515232,"size":0,"space":"symbols"}
sym.calcDecodeLength={"realname":"calcDecodeLength","demangled":false,"offset":134515766,"size":159,"space":"symbols"}
sym.calc_md5={"realname":"calc_md5","demangled":false,"offset":134516184,"size":256,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":134515376,"size":35,"space":"symbols"}
sym.imp.BIO_ctrl={"realname":"BIO_ctrl","demangled":false,"offset":134515024,"size":6,"space":"imports"}
sym.imp.BIO_f_base64={"realname":"BIO_f_base64","demangled":false,"offset":134514928,"size":6,"space":"imports"}
sym.imp.BIO_free_all={"realname":"BIO_free_all","demangled":false,"offset":134514896,"size":6,"space":"imports"}
sym.imp.BIO_new={"realname":"BIO_new","demangled":false,"offset":134515152,"size":6,"space":"imports"}
sym.imp.BIO_new_fp={"realname":"BIO_new_fp","demangled":false,"offset":134514864,"size":6,"space":"imports"}
sym.imp.BIO_push={"realname":"BIO_push","demangled":false,"offset":134514912,"size":6,"space":"imports"}
sym.imp.BIO_read={"realname":"BIO_read","demangled":false,"offset":134515120,"size":6,"space":"imports"}
sym.imp.BIO_set_flags={"realname":"BIO_set_flags","demangled":false,"offset":134514832,"size":6,"space":"imports"}
sym.imp.BIO_write={"realname":"BIO_write","demangled":false,"offset":134514992,"size":6,"space":"imports"}
sym.imp.MD5_Final={"realname":"MD5_Final","demangled":false,"offset":134514976,"size":6,"space":"imports"}
sym.imp.MD5_Init={"realname":"MD5_Init","demangled":false,"offset":134514720,"size":6,"space":"imports"}
sym.imp.MD5_Update={"realname":"MD5_Update","demangled":false,"offset":134514768,"size":6,"space":"imports"}
sym.imp.__isoc99_scanf={"realname":"__isoc99_scanf","demangled":false,"offset":134515104,"size":6,"space":"imports"}
sym.imp.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":134514880,"size":6,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":134515088,"size":6,"space":"imports"}
sym.imp.ceil={"realname":"ceil","demangled":false,"offset":134515216,"size":6,"space":"imports"}
sym.imp.exit={"realname":"exit","demangled":false,"offset":134515200,"size":6,"space":"imports"}
sym.imp.fclose={"realname":"fclose","demangled":false,"offset":134514960,"size":6,"space":"imports"}
sym.imp.fgets={"realname":"fgets","demangled":false,"offset":134514848,"size":6,"space":"imports"}
sym.imp.fmemopen={"realname":"fmemopen","demangled":false,"offset":134514784,"size":6,"space":"imports"}
sym.imp.free={"realname":"free","demangled":false,"offset":134514944,"size":6,"space":"imports"}
sym.imp.getchar={"realname":"getchar","demangled":false,"offset":134514752,"size":6,"space":"imports"}
sym.imp.malloc={"realname":"malloc","demangled":false,"offset":134515072,"size":6,"space":"imports"}
sym.imp.printf={"realname":"printf","demangled":false,"offset":134515008,"size":6,"space":"imports"}
sym.imp.puts={"realname":"puts","demangled":false,"offset":134515136,"size":6,"space":"imports"}
sym.imp.rand={"realname":"rand","demangled":false,"offset":134515168,"size":6,"space":"imports"}
sym.imp.setvbuf={"realname":"setvbuf","demangled":false,"offset":134515056,"size":6,"space":"imports"}
sym.imp.snprintf={"realname":"snprintf","demangled":false,"offset":134515184,"size":6,"space":"imports"}
sym.imp.srand={"realname":"srand","demangled":false,"offset":134514736,"size":6,"space":"imports"}
sym.imp.system={"realname":"system","demangled":false,"offset":134514816,"size":6,"space":"imports"}
sym.imp.time={"realname":"time","demangled":false,"offset":134515040,"size":6,"space":"imports"}
sym.main={"realname":"main","demangled":false,"offset":134516879,"size":260,"space":"symbols"}
sym.my_hash={"realname":"my_hash","demangled":false,"offset":134516440,"size":186,"space":"symbols"}
sym.process_hash={"realname":"process_hash","demangled":false,"offset":134516626,"size":253,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
functions=s
imports=s
registers=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s
symbols.sections=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
